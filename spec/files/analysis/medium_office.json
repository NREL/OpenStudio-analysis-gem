{
  "analysis": {
    "display_name": "Name goes here",
    "name": "name_goes_here",
    "output_variables": [
      {
        "display_name": "Total Natual Gas",
        "display_name_short": "Total Natual Gas",
        "metadata_id": null,
        "name": "total_natural_gas",
        "units": "MJ/m2",
        "objective_function": true,
        "objective_function_index": 0,
        "objective_function_target": 330.7,
        "scaling_factor": null,
        "objective_function_group": "TRUE"
      },
      {
        "display_name": "Total Electricity",
        "display_name_short": "Total Electricity",
        "metadata_id": null,
        "name": "total_electricity",
        "units": "MJ/m2",
        "objective_function": true,
        "objective_function_index": 1,
        "objective_function_target": 496.5,
        "scaling_factor": null,
        "objective_function_group": "TRUE"
      },
      {
        "display_name": "cooling_electricity_jan",
        "display_name_short": "cooling_electricity_jan",
        "metadata_id": null,
        "name": "cooling_electricity_jan",
        "units": "J",
        "objective_function": true,
        "objective_function_index": 2,
        "objective_function_target": 63597914341.3388,
        "scaling_factor": 463203800000.0,
        "objective_function_group": "TRUE"
      },
      {
        "display_name": "cooling_electricity_feb",
        "display_name_short": "cooling_electricity_feb",
        "metadata_id": null,
        "name": "cooling_electricity_feb",
        "units": "J",
        "objective_function": true,
        "objective_function_index": 3,
        "objective_function_target": 58138465958.3439,
        "scaling_factor": 463203800000.0,
        "objective_function_group": "TRUE"
      },
      {
        "display_name": "cooling_electricity_mar",
        "display_name_short": "cooling_electricity_mar",
        "metadata_id": null,
        "name": "cooling_electricity_mar",
        "units": "J",
        "objective_function": true,
        "objective_function_index": 4,
        "objective_function_target": 301531761648.05,
        "scaling_factor": 463203800000.0,
        "objective_function_group": "TRUE"
      },
      {
        "display_name": "cooling_electricity_apr",
        "display_name_short": "cooling_electricity_apr",
        "metadata_id": null,
        "name": "cooling_electricity_apr",
        "units": "J",
        "objective_function": true,
        "objective_function_index": 5,
        "objective_function_target": 336163175378.778,
        "scaling_factor": 463203800000.0,
        "objective_function_group": "TRUE"
      },
      {
        "display_name": "cooling_electricity_may",
        "display_name_short": "cooling_electricity_may",
        "metadata_id": null,
        "name": "cooling_electricity_may",
        "units": "J",
        "objective_function": true,
        "objective_function_index": 6,
        "objective_function_target": 1412749721236.32,
        "scaling_factor": 463203800000.0,
        "objective_function_group": "TRUE"
      },
      {
        "display_name": "cooling_electricity_jun",
        "display_name_short": "cooling_electricity_jun",
        "metadata_id": null,
        "name": "cooling_electricity_jun",
        "units": "J",
        "objective_function": true,
        "objective_function_index": 7,
        "objective_function_target": 2327741408781.58,
        "scaling_factor": 463203800000.0,
        "objective_function_group": "TRUE"
      },
      {
        "display_name": "cooling_electricity_jul",
        "display_name_short": "cooling_electricity_jul",
        "metadata_id": null,
        "name": "cooling_electricity_jul",
        "units": "J",
        "objective_function": true,
        "objective_function_index": 8,
        "objective_function_target": 2402590637505.39,
        "scaling_factor": 463203800000.0,
        "objective_function_group": "TRUE"
      },
      {
        "display_name": "cooling_electricity_aug",
        "display_name_short": "cooling_electricity_aug",
        "metadata_id": null,
        "name": "cooling_electricity_aug",
        "units": "J",
        "objective_function": true,
        "objective_function_index": 9,
        "objective_function_target": 2472656245279.37,
        "scaling_factor": 463203800000.0,
        "objective_function_group": "TRUE"
      },
      {
        "display_name": "cooling_electricity_sep",
        "display_name_short": "cooling_electricity_sep",
        "metadata_id": null,
        "name": "cooling_electricity_sep",
        "units": "J",
        "objective_function": true,
        "objective_function_index": 10,
        "objective_function_target": 1807432185051.14,
        "scaling_factor": 463203800000.0,
        "objective_function_group": "TRUE"
      },
      {
        "display_name": "cooling_electricity_oct",
        "display_name_short": "cooling_electricity_oct",
        "metadata_id": null,
        "name": "cooling_electricity_oct",
        "units": "J",
        "objective_function": true,
        "objective_function_index": 11,
        "objective_function_target": 619615878181.616,
        "scaling_factor": 463203800000.0,
        "objective_function_group": "TRUE"
      },
      {
        "display_name": "cooling_electricity_nov",
        "display_name_short": "cooling_electricity_nov",
        "metadata_id": null,
        "name": "cooling_electricity_nov",
        "units": "J",
        "objective_function": true,
        "objective_function_index": 12,
        "objective_function_target": 117109844324.095,
        "scaling_factor": 463203800000.0,
        "objective_function_group": "TRUE"
      },
      {
        "display_name": "cooling_electricity_dec",
        "display_name_short": "cooling_electricity_dec",
        "metadata_id": null,
        "name": "cooling_electricity_dec",
        "units": "J",
        "objective_function": true,
        "objective_function_index": 13,
        "objective_function_target": 103360013175.794,
        "scaling_factor": 463203800000.0,
        "objective_function_group": "TRUE"
      },
      {
        "display_name": "heating_gas_jan",
        "display_name_short": "heating_gas_jan",
        "metadata_id": null,
        "name": "heating_gas_jan",
        "units": "J",
        "objective_function": true,
        "objective_function_index": 14,
        "objective_function_target": 2799558466140.68,
        "scaling_factor": 463203800000.0,
        "objective_function_group": "TRUE"
      },
      {
        "display_name": "heating_gas_feb",
        "display_name_short": "heating_gas_feb",
        "metadata_id": null,
        "name": "heating_gas_feb",
        "units": "J",
        "objective_function": true,
        "objective_function_index": 15,
        "objective_function_target": 2663349812763.18,
        "scaling_factor": 463203800000.0,
        "objective_function_group": "TRUE"
      },
      {
        "display_name": "heating_gas_mar",
        "display_name_short": "heating_gas_mar",
        "metadata_id": null,
        "name": "heating_gas_mar",
        "units": "J",
        "objective_function": true,
        "objective_function_index": 16,
        "objective_function_target": 1576136833664.73,
        "scaling_factor": 463203800000.0,
        "objective_function_group": "TRUE"
      },
      {
        "display_name": "heating_gas_apr",
        "display_name_short": "heating_gas_apr",
        "metadata_id": null,
        "name": "heating_gas_apr",
        "units": "J",
        "objective_function": true,
        "objective_function_index": 17,
        "objective_function_target": 1752794439290.69,
        "scaling_factor": 463203800000.0,
        "objective_function_group": "TRUE"
      },
      {
        "display_name": "heating_gas_may",
        "display_name_short": "heating_gas_may",
        "metadata_id": null,
        "name": "heating_gas_may",
        "units": "J",
        "objective_function": true,
        "objective_function_index": 18,
        "objective_function_target": 375145279804.892,
        "scaling_factor": 463203800000.0,
        "objective_function_group": "TRUE"
      },
      {
        "display_name": "heating_gas_jun",
        "display_name_short": "heating_gas_jun",
        "metadata_id": null,
        "name": "heating_gas_jun",
        "units": "J",
        "objective_function": true,
        "objective_function_index": 19,
        "objective_function_target": 32970706746.2053,
        "scaling_factor": 463203800000.0,
        "objective_function_group": "TRUE"
      },
      {
        "display_name": "heating_gas_jul",
        "display_name_short": "heating_gas_jul",
        "metadata_id": null,
        "name": "heating_gas_jul",
        "units": "J",
        "objective_function": true,
        "objective_function_index": 20,
        "objective_function_target": 50096876832.5083,
        "scaling_factor": 463203800000.0,
        "objective_function_group": "TRUE"
      },
      {
        "display_name": "heating_gas_aug",
        "display_name_short": "heating_gas_aug",
        "metadata_id": null,
        "name": "heating_gas_aug",
        "units": "J",
        "objective_function": true,
        "objective_function_index": 21,
        "objective_function_target": 32660740137.6019,
        "scaling_factor": 463203800000.0,
        "objective_function_group": "TRUE"
      },
      {
        "display_name": "heating_gas_sep",
        "display_name_short": "heating_gas_sep",
        "metadata_id": null,
        "name": "heating_gas_sep",
        "units": "J",
        "objective_function": true,
        "objective_function_index": 22,
        "objective_function_target": 144097879467.636,
        "scaling_factor": 463203800000.0,
        "objective_function_group": "TRUE"
      },
      {
        "display_name": "heating_gas_oct",
        "display_name_short": "heating_gas_oct",
        "metadata_id": null,
        "name": "heating_gas_oct",
        "units": "J",
        "objective_function": true,
        "objective_function_index": 23,
        "objective_function_target": 970975709027.067,
        "scaling_factor": 463203800000.0,
        "objective_function_group": "TRUE"
      },
      {
        "display_name": "heating_gas_nov",
        "display_name_short": "heating_gas_nov",
        "metadata_id": null,
        "name": "heating_gas_nov",
        "units": "J",
        "objective_function": true,
        "objective_function_index": 24,
        "objective_function_target": 2261115778226.24,
        "scaling_factor": 463203800000.0,
        "objective_function_group": "TRUE"
      },
      {
        "display_name": "heating_gas_dec",
        "display_name_short": "heating_gas_dec",
        "metadata_id": null,
        "name": "heating_gas_dec",
        "units": "J",
        "objective_function": true,
        "objective_function_index": 25,
        "objective_function_target": 2657735386128.84,
        "scaling_factor": 463203800000.0,
        "objective_function_group": "TRUE"
      }
    ],
    "problem": {
      "algorithm": {
        "popsize": 30,
        "generations": 5,
        "waitgenerations": 2,
        "bfgsburnin": 2,
        "solutiontolerance": 0.01,
        "epsilongradient": 0.01,
        "pgtol": 0.01,
        "factr": 45036000000000,
        "maxit": 100,
        "normtype": "minkowski",
        "ppower": 2,
        "objective_functions": [
          "total_natural_gas",
          "total_electricity",
          "cooling_electricity_jan",
          "cooling_electricity_feb",
          "cooling_electricity_mar",
          "cooling_electricity_apr",
          "cooling_electricity_may",
          "cooling_electricity_jun",
          "cooling_electricity_jul",
          "cooling_electricity_aug",
          "cooling_electricity_sep",
          "cooling_electricity_oct",
          "cooling_electricity_nov",
          "cooling_electricity_dec",
          "heating_gas_jan",
          "heating_gas_feb",
          "heating_gas_mar",
          "heating_gas_apr",
          "heating_gas_may",
          "heating_gas_jun",
          "heating_gas_jul",
          "heating_gas_aug",
          "heating_gas_sep",
          "heating_gas_oct",
          "heating_gas_nov",
          "heating_gas_dec"
        ]
      },
      "name": "Problem",
      "workflow": [
        {
          "measure_definition_class_name": "ReduceLightingLoadsByPercentage",
          "measure_definition_directory": "./measures/ReduceLightingLoadsByPercentage",
          "measure_definition_display_name": "ReduceLightingLoadsByPercentage",
          "measure_definition_uuid": "aff29e4a-7db1-4100-9b13-78cba98b984b",
          "measure_definition_version_uuid": "f3f2aaf7-7251-471c-941b-c46a7fbe0999",
          "measure_type": "RubyMeasure",
          "arguments": [
            {
              "display_name": "Apply the Measure to a Specific Space Type or to the Entire Model.",
              "display_name_short": "Apply the Measure to a Specific Space Type or to the Entire Model.",
              "name": "space_type",
              "value": "*Entire Building*",
              "value_type": "choice"
            },
            {
              "display_name": "Increase in Material and Installation Cost for Lighting per Floor Area (%).",
              "display_name_short": "Increase in Material and Installation Cost for Lighting per Floor Area (%).",
              "name": "material_and_installation_cost",
              "value": 0.0,
              "value_type": "double"
            },
            {
              "display_name": "Increase in Demolition Costs for Lighting per Floor Area (%).",
              "display_name_short": "Increase in Demolition Costs for Lighting per Floor Area (%).",
              "name": "demolition_cost",
              "value": 0.0,
              "value_type": "double"
            },
            {
              "display_name": "Years Until Costs Start (whole years).",
              "display_name_short": "Years Until Costs Start (whole years).",
              "name": "years_until_costs_start",
              "value": 0,
              "value_type": "integer"
            },
            {
              "display_name": "Demolition Costs Occur During Initial Construction?",
              "display_name_short": "Demolition Costs Occur During Initial Construction?",
              "name": "demo_cost_initial_const",
              "value": true,
              "value_type": "bool"
            },
            {
              "display_name": "Expected Life (whole years).",
              "display_name_short": "Expected Life (whole years).",
              "name": "expected_life",
              "value": 15,
              "value_type": "integer"
            },
            {
              "display_name": "Increase O & M Costs for Lighting per Floor Area (%).",
              "display_name_short": "Increase O & M Costs for Lighting per Floor Area (%).",
              "name": "om_cost",
              "value": 0.0,
              "value_type": "double"
            },
            {
              "display_name": "O & M Frequency (whole years).",
              "display_name_short": "O & M Frequency (whole years).",
              "name": "om_frequency",
              "value": 1,
              "value_type": "integer"
            }
          ],
          "display_name": "Reduce Lighting Loads by Percentage",
          "name": "reduce_lighting_loads_by_percentage",
          "variables": [
            {
              "argument": {
                "display_name": "Lighting Power Reduction",
                "display_name_short": "Lighting Power Reduction",
                "name": "lighting_power_reduction_percent",
                "value_type": "double"
              },
              "display_name": "Lighting Power Reduction",
              "display_name_short": "Lighting Power Reduction",
              "maximum": 20.0,
              "minimum": -20.0,
              "relation_to_output": "",
              "static_value": 0.0,
              "uncertainty_description": {
                "attributes": [
                  {
                    "name": "lower_bounds",
                    "value": -20.0
                  },
                  {
                    "name": "upper_bounds",
                    "value": 20.0
                  },
                  {
                    "name": "stddev",
                    "value": 6.666666666666667
                  },
                  {
                    "name": "delta_x",
                    "value": null
                  },
                  {
                    "name": "modes",
                    "value": -1.0
                  }
                ],
                "type": "triangle_uncertain"
              },
              "units": "",
              "value_type": "double",
              "variable": true,
              "variable_type": "RubyContinuousVariable",
              "uuid": "fba23c0a-9de2-46da-a77b-66636b899b34",
              "version_uuid": "1130c621-abd5-4547-a56b-86b9bd1dfb61"
            }
          ],
          "workflow_index": 0,
          "workflow_step_type": "Measure",
          "uuid": "594e0368-db81-4259-96eb-e64fb84ac898",
          "version_uuid": "ce2b0b2e-61eb-42f0-ac73-c1f6c3db3436"
        },
        {
          "measure_definition_class_name": "ReduceElectricEquipmentLoadsByPercentage",
          "measure_definition_directory": "./measures/ExampleMeasure",
          "measure_definition_display_name": "ReduceElectricEquipmentLoadsByPercentage",
          "measure_definition_uuid": "16fa675e-d4a7-4e7e-8442-d8d3ad5c22a9",
          "measure_definition_version_uuid": "e7d3197d-d8e6-49fd-a204-444362ea5687",
          "measure_type": "RubyMeasure",
          "arguments": [
            {
              "display_name": "Apply the Measure to a Specific Space Type or to the Entire Model.",
              "display_name_short": "Apply the Measure to a Specific Space Type or to the Entire Model.",
              "name": "space_type",
              "value": "*Entire Building*",
              "value_type": "choice"
            },
            {
              "display_name": "Increase in Material and Installation Cost for Electric Equipment per Floor Area (%).",
              "display_name_short": "Increase in Material and Installation Cost for Electric Equipment per Floor Area (%).",
              "name": "material_and_installation_cost",
              "value": 0.0,
              "value_type": "double"
            },
            {
              "display_name": "Increase in Demolition Costs for Electric Equipment per Floor Area (%).",
              "display_name_short": "Increase in Demolition Costs for Electric Equipment per Floor Area (%).",
              "name": "demolition_cost",
              "value": 0.0,
              "value_type": "double"
            },
            {
              "display_name": "Years Until Costs Start (whole years).",
              "display_name_short": "Years Until Costs Start (whole years).",
              "name": "years_until_costs_start",
              "value": 0,
              "value_type": "integer"
            },
            {
              "display_name": "Demolition Costs Occur During Initial Construction?",
              "display_name_short": "Demolition Costs Occur During Initial Construction?",
              "name": "demo_cost_initial_const",
              "value": false,
              "value_type": "bool"
            },
            {
              "display_name": "Expected Life (whole years).",
              "display_name_short": "Expected Life (whole years).",
              "name": "expected_life",
              "value": 15,
              "value_type": "integer"
            },
            {
              "display_name": "Increase O & M Costs for Electric Equipment per Floor Area (%).",
              "display_name_short": "Increase O & M Costs for Electric Equipment per Floor Area (%).",
              "name": "om_cost",
              "value": 0.0,
              "value_type": "double"
            },
            {
              "display_name": "O & M Frequency (whole years).",
              "display_name_short": "O & M Frequency (whole years).",
              "name": "om_frequency",
              "value": 1,
              "value_type": "integer"
            }
          ],
          "display_name": "Reduce Electric Equipment Loads by Percentage",
          "name": "reduce_electric_equipment_loads_by_percentage",
          "variables": [
            {
              "argument": {
                "display_name": "Electric Equipment Power Reduction (%).",
                "display_name_short": "Electric Equipment Power Reduction (%).",
                "name": "elecequip_power_reduction_percent",
                "value_type": "double"
              },
              "display_name": "Electric Equipment Power Reduction (%).",
              "display_name_short": "Electric Equipment Power Reduction (%).",
              "maximum": 30.0,
              "minimum": -20.0,
              "relation_to_output": "",
              "static_value": 0.0,
              "uncertainty_description": {
                "attributes": [
                  {
                    "name": "lower_bounds",
                    "value": -20.0
                  },
                  {
                    "name": "upper_bounds",
                    "value": 30.0
                  },
                  {
                    "name": "stddev",
                    "value": 8.333333333333334
                  },
                  {
                    "name": "delta_x",
                    "value": null
                  },
                  {
                    "name": "modes",
                    "value": 0.0
                  }
                ],
                "type": "triangle_uncertain"
              },
              "units": "",
              "value_type": "double",
              "variable": true,
              "variable_type": "RubyContinuousVariable",
              "uuid": "f4faef87-71c5-4c49-9015-17f1d29c7e70",
              "version_uuid": "ea66a786-de91-4a08-b185-80627aea263f"
            }
          ],
          "workflow_index": 1,
          "workflow_step_type": "Measure",
          "uuid": "d6a51f74-d904-446a-a031-bfaeb3c153b7",
          "version_uuid": "b4cd340e-c918-47ac-b633-85322e5305a5"
        },
        {
          "measure_definition_class_name": "ReduceSpaceInfiltrationByPercentage",
          "measure_definition_directory": "./measures/ExampleMeasure",
          "measure_definition_display_name": "ReduceSpaceInfiltrationByPercentage",
          "measure_definition_uuid": "2dd60226-325f-4b83-ac5e-8595f62a0ae7",
          "measure_definition_version_uuid": "8270b55f-18d6-4704-b4e2-f1f56b1a1ad2",
          "measure_type": "RubyMeasure",
          "arguments": [
            {
              "display_name": "Apply the Measure to a Specific Space Type or to the Entire Model.",
              "display_name_short": "Apply the Measure to a Specific Space Type or to the Entire Model.",
              "name": "space_type",
              "value": "*Entire Building*",
              "value_type": "choice"
            },
            {
              "display_name": "Increase in Material and Installation Costs for Building per Affected Floor Area ($/ft^2).",
              "display_name_short": "Increase in Material and Installation Costs for Building per Affected Floor Area ($/ft^2).",
              "name": "material_and_installation_cost",
              "value": 0.0,
              "value_type": "double"
            },
            {
              "display_name": "O & M Costs for Construction per Affected Floor Area ($/ft^2).",
              "display_name_short": "O & M Costs for Construction per Affected Floor Area ($/ft^2).",
              "name": "om_cost",
              "value": 0.0,
              "value_type": "double"
            },
            {
              "display_name": "O & M Frequency (whole years).",
              "display_name_short": "O & M Frequency (whole years).",
              "name": "om_frequency",
              "value": 1,
              "value_type": "integer"
            }
          ],
          "display_name": "ReduceSpaceInfiltrationByPercentage",
          "name": "reducespaceinfiltrationbypercentage",
          "variables": [
            {
              "argument": {
                "display_name": "Space Infiltration Power Reduction",
                "display_name_short": "Space Infiltration Power Reduction",
                "name": "space_infiltration_reduction_percent",
                "value_type": "double"
              },
              "display_name": "Space Infiltration Power Reduction",
              "display_name_short": "Space Infiltration Power Reduction",
              "maximum": 1.0,
              "minimum": -100.0,
              "relation_to_output": "",
              "static_value": 0.0,
              "uncertainty_description": {
                "attributes": [
                  {
                    "name": "lower_bounds",
                    "value": -100.0
                  },
                  {
                    "name": "upper_bounds",
                    "value": 1.0
                  },
                  {
                    "name": "stddev",
                    "value": 16.833333333333332
                  },
                  {
                    "name": "delta_x",
                    "value": null
                  },
                  {
                    "name": "modes",
                    "value": -50.0
                  }
                ],
                "type": "uniform_uncertain"
              },
              "units": "",
              "value_type": "double",
              "variable": true,
              "variable_type": "RubyContinuousVariable",
              "uuid": "60ce1c82-488b-4f06-9ec6-d1b7d4d3536a",
              "version_uuid": "2d019646-b9ff-4f5b-9bcc-ede2cbef51df"
            }
          ],
          "workflow_index": 2,
          "workflow_step_type": "Measure",
          "uuid": "bf4fc4f5-2025-4885-975a-7d3f80119096",
          "version_uuid": "bd4978b7-3d85-4450-8327-84691675f3bd"
        },
        {
          "measure_definition_class_name": "AdjustTheromstatSetpointsByDegrees",
          "measure_definition_directory": "./measures/ExampleMeasure",
          "measure_definition_display_name": "AdjustTheromstatSetpointsByDegrees",
          "measure_definition_uuid": "2512503f-7f75-442d-858c-2074ef93ebf9",
          "measure_definition_version_uuid": "815c0079-6978-477f-8039-822dd13c19bf",
          "measure_type": "RubyMeasure",
          "arguments": [
            {
              "display_name": "Alter Design Day Thermostats?",
              "display_name_short": "Alter Design Day Thermostats?",
              "name": "alter_design_days",
              "value": false,
              "value_type": "bool"
            }
          ],
          "display_name": "Adjust Thermostat Setpoints by Degrees",
          "name": "adjust_thermostat_setpoints_by_degrees",
          "variables": [
            {
              "argument": {
                "display_name": "Degrees Fahrenheit to Adjust Cooling Setpoint By.",
                "display_name_short": "Degrees Fahrenheit to Adjust Cooling Setpoint By.",
                "name": "cooling_adjustment",
                "value_type": "double"
              },
              "display_name": "Degrees Fahrenheit to Adjust Cooling Setpoint By.",
              "display_name_short": "Degrees Fahrenheit to Adjust Cooling Setpoint By.",
              "maximum": 2.0,
              "minimum": -2.0,
              "relation_to_output": "",
              "static_value": 1.0,
              "uncertainty_description": {
                "attributes": [
                  {
                    "name": "lower_bounds",
                    "value": -2.0
                  },
                  {
                    "name": "upper_bounds",
                    "value": 2.0
                  },
                  {
                    "name": "stddev",
                    "value": 0.6666666666666666
                  },
                  {
                    "name": "delta_x",
                    "value": null
                  },
                  {
                    "name": "modes",
                    "value": 0.0
                  }
                ],
                "type": "uniform_uncertain"
              },
              "units": "",
              "value_type": "double",
              "variable": true,
              "variable_type": "RubyContinuousVariable",
              "uuid": "c230a92f-1955-420e-97d9-c9b2b4f8f71a",
              "version_uuid": "1438d769-6bdf-4965-ba0a-5f65c6f4d057"
            },
            {
              "argument": {
                "display_name": "Degrees Fahrenheit to Adjust heating Setpoint By.",
                "display_name_short": "Degrees Fahrenheit to Adjust heating Setpoint By.",
                "name": "heating_adjustment",
                "value_type": "double"
              },
              "display_name": "Degrees Fahrenheit to Adjust heating Setpoint By.",
              "display_name_short": "Degrees Fahrenheit to Adjust heating Setpoint By.",
              "maximum": 2.0,
              "minimum": -2.0,
              "relation_to_output": "",
              "static_value": -1.0,
              "uncertainty_description": {
                "attributes": [
                  {
                    "name": "lower_bounds",
                    "value": -2.0
                  },
                  {
                    "name": "upper_bounds",
                    "value": 2.0
                  },
                  {
                    "name": "stddev",
                    "value": 0.6666666666666666
                  },
                  {
                    "name": "delta_x",
                    "value": null
                  },
                  {
                    "name": "modes",
                    "value": 0.0
                  }
                ],
                "type": "uniform_uncertain"
              },
              "units": "",
              "value_type": "double",
              "variable": true,
              "variable_type": "RubyContinuousVariable",
              "uuid": "2b4790ef-3e45-4751-91a5-5f38e8a052ff",
              "version_uuid": "32578540-eba5-49f6-aff3-40fc1919e693"
            }
          ],
          "workflow_index": 3,
          "workflow_step_type": "Measure",
          "uuid": "840ddda7-6437-4052-82f8-ae51d3267e0c",
          "version_uuid": "5e7447c6-cc8e-4114-86ad-7cb84fa8582a"
        },
        {
          "measure_definition_class_name": "ReduceVentilationByPercentage",
          "measure_definition_directory": "./measures/ExampleMeasure",
          "measure_definition_display_name": "ReduceVentilationByPercentage",
          "measure_definition_uuid": "da09f4ef-f337-4e5a-b2fd-eabe4f71585a",
          "measure_definition_version_uuid": "9b0c8b9e-6412-4fd4-a1bd-6be675d5e9f8",
          "measure_type": "RubyMeasure",
          "arguments": [
            {
              "display_name": "Apply the Measure to a Specific Space Type or to the Entire Model.",
              "display_name_short": "Apply the Measure to a Specific Space Type or to the Entire Model.",
              "name": "space_type",
              "value": "*Entire Building*",
              "value_type": "choice"
            }
          ],
          "display_name": "Reduce Ventilation By Percentage",
          "name": "reduce_ventilation_by_percentage",
          "variables": [
            {
              "argument": {
                "display_name": "Design Specification Outdoor Air Reduction (%).",
                "display_name_short": "Design Specification Outdoor Air Reduction (%).",
                "name": "design_spec_outdoor_air_reduction_percent",
                "value_type": "double"
              },
              "display_name": "Design Specification Outdoor Air Reduction (%).",
              "display_name_short": "Design Specification Outdoor Air Reduction (%).",
              "maximum": 90.0,
              "minimum": -90.0,
              "relation_to_output": "",
              "static_value": 0.0,
              "uncertainty_description": {
                "attributes": [
                  {
                    "name": "lower_bounds",
                    "value": -90.0
                  },
                  {
                    "name": "upper_bounds",
                    "value": 90.0
                  },
                  {
                    "name": "stddev",
                    "value": 30.0
                  },
                  {
                    "name": "delta_x",
                    "value": null
                  },
                  {
                    "name": "modes",
                    "value": -1.0
                  }
                ],
                "type": "triangle_uncertain"
              },
              "units": "",
              "value_type": "double",
              "variable": true,
              "variable_type": "RubyContinuousVariable",
              "uuid": "2cb26d52-b92f-4e33-a729-bc511b488df9",
              "version_uuid": "8a8c2cf0-17d2-4d12-a1f7-f0cc72726aac"
            }
          ],
          "workflow_index": 4,
          "workflow_step_type": "Measure",
          "uuid": "e2d986fc-e860-4371-9719-58aa7b25c34d",
          "version_uuid": "304bd50a-01e7-41a2-9421-6adb6b9e2307"
        },
        {
          "measure_definition_class_name": "EnableEconomizerControl",
          "measure_definition_directory": "./measures/ExampleMeasure",
          "measure_definition_display_name": "EnableEconomizerControl",
          "measure_definition_uuid": "3a1c0694-75f6-4ed9-b020-4ee73e7e86b5",
          "measure_definition_version_uuid": "e00c1d39-fa1f-4be6-bdbd-cb2c3d1e79f8",
          "measure_type": "RubyMeasure",
          "arguments": [
            {
              "display_name": "Choose an Air Loop to Alter.",
              "display_name_short": "Choose an Air Loop to Alter.",
              "name": "object",
              "value": "*All Air Loops*",
              "value_type": "choice"
            },
            {
              "display_name": "Economizer Control Type.",
              "display_name_short": "Economizer Control Type.",
              "name": "economizer_type",
              "value": "FixedDryBulb",
              "value_type": "choice"
            },
            {
              "display_name": "Economizer Maximum Enthalpy (Btu/lb).",
              "display_name_short": "Economizer Maximum Enthalpy (Btu/lb).",
              "name": "econoMaxEnthalpy",
              "value": 28.0,
              "value_type": "double"
            },
            {
              "display_name": "Economizer Maximum Limit Dewpoint Temperature (F).",
              "display_name_short": "Economizer Maximum Limit Dewpoint Temperature (F).",
              "name": "econoMaxDewpointTemp",
              "value": 55.0,
              "value_type": "double"
            },
            {
              "display_name": "Economizer Minimum Limit Dry-Bulb Temperature (F).",
              "display_name_short": "Economizer Minimum Limit Dry-Bulb Temperature (F).",
              "name": "econoMinDryBulbTemp",
              "value": -148.0,
              "value_type": "double"
            },
            {
              "display_name": "Remove Baseline Costs From Effected AirLoopHVACOutdoorAirSystems?",
              "display_name_short": "Remove Baseline Costs From Effected AirLoopHVACOutdoorAirSystems?",
              "name": "remove_costs",
              "value": false,
              "value_type": "bool"
            },
            {
              "display_name": "Material and Installation Costs per Air Loop to Enable Economizer ($).",
              "display_name_short": "Material and Installation Costs per Air Loop to Enable Economizer ($).",
              "name": "material_cost",
              "value": 0.0,
              "value_type": "double"
            },
            {
              "display_name": "Demolition Costs per Air Loop to Enable Economizer ($).",
              "display_name_short": "Demolition Costs per Air Loop to Enable Economizer ($).",
              "name": "demolition_cost",
              "value": 0.0,
              "value_type": "double"
            },
            {
              "display_name": "Years Until Costs Start (whole years).",
              "display_name_short": "Years Until Costs Start (whole years).",
              "name": "years_until_costs_start",
              "value": 0,
              "value_type": "integer"
            },
            {
              "display_name": "Demolition Costs Occur During Initial Construction?",
              "display_name_short": "Demolition Costs Occur During Initial Construction?",
              "name": "demo_cost_initial_const",
              "value": false,
              "value_type": "bool"
            },
            {
              "display_name": "Expected Life (whole years).",
              "display_name_short": "Expected Life (whole years).",
              "name": "expected_life",
              "value": 20,
              "value_type": "integer"
            },
            {
              "display_name": "O & M Costs per Air Loop for Economizer  ($).",
              "display_name_short": "O & M Costs per Air Loop for Economizer  ($).",
              "name": "om_cost",
              "value": 0.0,
              "value_type": "double"
            },
            {
              "display_name": "O & M Frequency (whole years).",
              "display_name_short": "O & M Frequency (whole years).",
              "name": "om_frequency",
              "value": 1,
              "value_type": "integer"
            }
          ],
          "display_name": "Enable Economizer Control",
          "name": "enable_economizer_control",
          "variables": [
            {
              "argument": {
                "display_name": "Economizer Maximum Limit Dry-Bulb Temperature (F).",
                "display_name_short": "Economizer Maximum Limit Dry-Bulb Temperature (F).",
                "name": "econoMaxDryBulbTemp",
                "value_type": "double"
              },
              "display_name": "Economizer Maximum Limit Dry-Bulb Temperature (F).",
              "display_name_short": "Economizer Maximum Limit Dry-Bulb Temperature (F).",
              "maximum": 80.0,
              "minimum": 76.0,
              "relation_to_output": "",
              "static_value": 79.0,
              "uncertainty_description": {
                "attributes": [
                  {
                    "name": "lower_bounds",
                    "value": 76.0
                  },
                  {
                    "name": "upper_bounds",
                    "value": 80.0
                  },
                  {
                    "name": "stddev",
                    "value": 0.6666666666666666
                  },
                  {
                    "name": "delta_x",
                    "value": null
                  },
                  {
                    "name": "modes",
                    "value": 78.0
                  }
                ],
                "type": "triangle_uncertain"
              },
              "units": "",
              "value_type": "double",
              "variable": true,
              "variable_type": "RubyContinuousVariable",
              "uuid": "037c56f4-4633-4898-a65f-9b92e8d7af5d",
              "version_uuid": "6f7909d4-ce40-4bbd-86ba-06b1a0b7847e"
            }
          ],
          "workflow_index": 5,
          "workflow_step_type": "Measure",
          "uuid": "baa02339-bc1b-44e4-9420-e1670dc429a0",
          "version_uuid": "028412ac-2da7-45f5-9dc4-e0b1c11aa14b"
        },
        {
          "measure_definition_class_name": "SetBoilerThermalEfficiency",
          "measure_definition_directory": "./measures/ExampleMeasure",
          "measure_definition_display_name": "SetBoilerThermalEfficiency",
          "measure_definition_uuid": "91d6e1be-8898-4626-8a71-fb80c439cdda",
          "measure_definition_version_uuid": "1afb3859-3af7-468b-9942-8b699158066d",
          "measure_type": "RubyMeasure",
          "arguments": [
            {
              "display_name": "Apply the measure to",
              "display_name_short": "Apply the measure to",
              "name": "boiler_widget",
              "value": "*All boilers*",
              "value_type": "choice"
            },
            {
              "display_name": "Option 1, set boiler nominal thermal efficiency to a user defined value",
              "display_name_short": "Option 1, set boiler nominal thermal efficiency to a user defined value",
              "name": "input_option_manual",
              "value": true,
              "value_type": "bool"
            },
            {
              "display_name": "Option 2, set boiler nominal thermal efficiency based on ASHRAE Standard 90.1 requirement",
              "display_name_short": "Option 2, set boiler nominal thermal efficiency based on ASHRAE Standard 90.1 requirement",
              "name": "input_option_standard",
              "value": false,
              "value_type": "bool"
            },
            {
              "display_name": "Boiler nominal capacity [W]",
              "display_name_short": "Boiler nominal capacity [W]",
              "name": "nominal_capacity",
              "value": 0.0,
              "value_type": "double"
            },
            {
              "display_name": "Fuel type",
              "display_name_short": "Fuel type",
              "name": "fuel_type_widget",
              "value": 0.0,
              "value_type": "choice"
            },
            {
              "display_name": "ASHRAE Standards 90.1",
              "display_name_short": "ASHRAE Standards 90.1",
              "name": "standards_widget",
              "value": 0.0,
              "value_type": "choice"
            }
          ],
          "display_name": "Set Boiler Thermal Efficiency",
          "name": "set_boiler_thermal_efficiency",
          "variables": [
            {
              "argument": {
                "display_name": "Boiler nominal thermal efficiency (between 0 and 1)",
                "display_name_short": "Boiler nominal thermal efficiency (between 0 and 1)",
                "name": "boiler_thermal_efficiency",
                "value_type": "double"
              },
              "display_name": "Boiler nominal thermal efficiency (between 0 and 1)",
              "display_name_short": "Boiler nominal thermal efficiency (between 0 and 1)",
              "maximum": 0.9,
              "minimum": 0.5,
              "relation_to_output": "",
              "static_value": 0.8,
              "uncertainty_description": {
                "attributes": [
                  {
                    "name": "lower_bounds",
                    "value": 0.5
                  },
                  {
                    "name": "upper_bounds",
                    "value": 0.9
                  },
                  {
                    "name": "stddev",
                    "value": 0.06666666666666667
                  },
                  {
                    "name": "delta_x",
                    "value": null
                  },
                  {
                    "name": "modes",
                    "value": 0.75
                  }
                ],
                "type": "triangle_uncertain"
              },
              "units": "",
              "value_type": "double",
              "variable": true,
              "variable_type": "RubyContinuousVariable",
              "uuid": "74943450-7f82-434a-b53e-96f82e3161f5",
              "version_uuid": "67896b9a-0e87-457f-8681-70088b7617eb"
            }
          ],
          "workflow_index": 6,
          "workflow_step_type": "Measure",
          "uuid": "07299579-bf77-43c2-aa19-b5e53512c05c",
          "version_uuid": "b6a9dbe6-b207-40a1-a767-a642c7c824d8"
        },
        {
          "measure_definition_class_name": "IncreaseInsulationRValueForExteriorWalls",
          "measure_definition_directory": "./measures/ExampleMeasure",
          "measure_definition_display_name": "IncreaseInsulationRValueForExteriorWalls",
          "measure_definition_uuid": "9767f8d2-b384-4265-9f6c-5f904d6efdcd",
          "measure_definition_version_uuid": "2234d439-2b40-471b-975c-a9b0239d8f35",
          "measure_type": "RubyMeasure",
          "arguments": [
            {
              "display_name": "Allow both increase and decrease in R-value to reach requested target?",
              "display_name_short": "Allow both increase and decrease in R-value to reach requested target?",
              "name": "allow_reduction",
              "value": true,
              "value_type": "bool"
            },
            {
              "display_name": "Increase in Material and Installation Costs for Construction per Area Used ($/ft^2).",
              "display_name_short": "Increase in Material and Installation Costs for Construction per Area Used ($/ft^2).",
              "name": "material_cost_increase_ip",
              "value": 0.0,
              "value_type": "double"
            },
            {
              "display_name": "One Time Retrofit Cost to Add Insulation to Construction ($/ft^2).",
              "display_name_short": "One Time Retrofit Cost to Add Insulation to Construction ($/ft^2).",
              "name": "one_time_retrofit_cost_ip",
              "value": 0.0,
              "value_type": "double"
            },
            {
              "display_name": "Year to Incur One Time Retrofit Cost (whole years).",
              "display_name_short": "Year to Incur One Time Retrofit Cost (whole years).",
              "name": "years_until_retrofit_cost",
              "value": 0,
              "value_type": "integer"
            }
          ],
          "display_name": "Set R-value of Insulation for Exterior Walls to a Specific Value",
          "name": "set_r_value_of_insulation_for_exterior_walls_to_a_specific_value",
          "variables": [
            {
              "argument": {
                "display_name": "Insulation R-value (ft^2*h*R/Btu).",
                "display_name_short": "Insulation R-value (ft^2*h*R/Btu).",
                "name": "r_value",
                "value_type": "double"
              },
              "display_name": "Insulation R-value (ft^2*h*R/Btu).",
              "display_name_short": "Insulation R-value (ft^2*h*R/Btu).",
              "maximum": 5.0,
              "minimum": 1.0,
              "relation_to_output": "",
              "static_value": 5.0,
              "uncertainty_description": {
                "attributes": [
                  {
                    "name": "lower_bounds",
                    "value": 1.0
                  },
                  {
                    "name": "upper_bounds",
                    "value": 5.0
                  },
                  {
                    "name": "stddev",
                    "value": 0.6666666666666666
                  },
                  {
                    "name": "delta_x",
                    "value": null
                  },
                  {
                    "name": "modes",
                    "value": 2.5
                  }
                ],
                "type": "triangle_uncertain"
              },
              "units": "",
              "value_type": "double",
              "variable": true,
              "variable_type": "RubyContinuousVariable",
              "uuid": "df6f3372-f195-4932-a4fc-694baf9ee087",
              "version_uuid": "487cf135-cabc-4868-8523-c0bd7e4320bb"
            }
          ],
          "workflow_index": 7,
          "workflow_step_type": "Measure",
          "uuid": "5f4176b5-f080-46ff-832d-dd5a5f54bf57",
          "version_uuid": "3351875b-48a1-43e4-a20e-77204ec7d180"
        },
        {
          "measure_definition_class_name": "SetChillerCOP",
          "measure_definition_directory": "./measures/ExampleMeasure",
          "measure_definition_display_name": "SetChillerCOP",
          "measure_definition_uuid": "d0e5f667-ffbf-4e36-8bce-7ed1f5f8b7af",
          "measure_definition_version_uuid": "951ac42a-d094-49e1-8359-7b83e2c044af",
          "measure_type": "RubyMeasure",
          "arguments": [
            {
              "display_name": "Apply the measure to",
              "display_name_short": "Apply the measure to",
              "name": "chiller_widget",
              "value": "*All chillers*",
              "value_type": "choice"
            }
          ],
          "display_name": "SetChillerCOP",
          "name": "setchillercop",
          "variables": [
            {
              "argument": {
                "display_name": "Chiller Rated COP (more than 0)",
                "display_name_short": "Chiller Rated COP (more than 0)",
                "name": "chiller_thermal_efficiency",
                "value_type": "double"
              },
              "display_name": "Chiller Rated COP (more than 0)",
              "display_name_short": "Chiller Rated COP (more than 0)",
              "maximum": 5.5,
              "minimum": 2.5,
              "relation_to_output": "",
              "static_value": 3.0,
              "uncertainty_description": {
                "attributes": [
                  {
                    "name": "lower_bounds",
                    "value": 2.5
                  },
                  {
                    "name": "upper_bounds",
                    "value": 5.5
                  },
                  {
                    "name": "stddev",
                    "value": 0.5
                  },
                  {
                    "name": "delta_x",
                    "value": null
                  },
                  {
                    "name": "modes",
                    "value": 3.5
                  }
                ],
                "type": "triangle_uncertain"
              },
              "units": "",
              "value_type": "double",
              "variable": true,
              "variable_type": "RubyContinuousVariable",
              "uuid": "94909851-776a-44d4-8209-6879b573c730",
              "version_uuid": "4983ab41-44e7-4c61-b6ba-2a24fadf938b"
            }
          ],
          "workflow_index": 8,
          "workflow_step_type": "Measure",
          "uuid": "8231b6ff-4bab-4638-8607-e9496f1e9656",
          "version_uuid": "b888ba2d-3b54-4bc9-ae16-0123ca37fdad"
        },
        {
          "measure_definition_class_name": "SetHeatingandCoolingSizingFactors",
          "measure_definition_directory": "./measures/ExampleMeasure",
          "measure_definition_display_name": "SetHeatingandCoolingSizingFactors",
          "measure_definition_uuid": "c0d1f629-e656-4abd-9e98-77ca8e372399",
          "measure_definition_version_uuid": "fb3170e3-5922-4bfa-918a-e8e4462fd4c0",
          "measure_type": "RubyMeasure",
          "arguments": [

          ],
          "display_name": "Set Heating and Cooling Sizing Factors",
          "name": "set_heating_and_cooling_sizing_factors",
          "variables": [
            {
              "argument": {
                "display_name": "Heating Sizing Factor (eg 1.25 = 125% of required heating capacity.",
                "display_name_short": "Heating Sizing Factor (eg 1.25 = 125% of required heating capacity.",
                "name": "htg_sz_factor",
                "value_type": "double"
              },
              "display_name": "Heating Sizing Factor (eg 1.25 = 125% of required heating capacity.",
              "display_name_short": "Heating Sizing Factor (eg 1.25 = 125% of required heating capacity.",
              "maximum": 1.5,
              "minimum": 1.0,
              "relation_to_output": "",
              "static_value": 1.25,
              "uncertainty_description": {
                "attributes": [
                  {
                    "name": "lower_bounds",
                    "value": 1.0
                  },
                  {
                    "name": "upper_bounds",
                    "value": 1.5
                  },
                  {
                    "name": "stddev",
                    "value": 0.08333333333333333
                  },
                  {
                    "name": "delta_x",
                    "value": null
                  },
                  {
                    "name": "modes",
                    "value": 1.25
                  }
                ],
                "type": "triangle_uncertain"
              },
              "units": "",
              "value_type": "double",
              "variable": true,
              "variable_type": "RubyContinuousVariable",
              "uuid": "e94fd112-e37a-4209-b04f-4d5a968e2ed4",
              "version_uuid": "e12e57f5-afcf-41c9-9ed9-4f20e0d43ea5"
            },
            {
              "argument": {
                "display_name": "Coolinig Sizing Factor (eg 1.15 = 115% of required cooling capacity.",
                "display_name_short": "Coolinig Sizing Factor (eg 1.15 = 115% of required cooling capacity.",
                "name": "clg_sz_factor",
                "value_type": "double"
              },
              "display_name": "Coolinig Sizing Factor (eg 1.15 = 115% of required cooling capacity.",
              "display_name_short": "Coolinig Sizing Factor (eg 1.15 = 115% of required cooling capacity.",
              "maximum": 1.5,
              "minimum": 1.0,
              "relation_to_output": "",
              "static_value": 1.15,
              "uncertainty_description": {
                "attributes": [
                  {
                    "name": "lower_bounds",
                    "value": 1.0
                  },
                  {
                    "name": "upper_bounds",
                    "value": 1.5
                  },
                  {
                    "name": "stddev",
                    "value": 0.08333333333333333
                  },
                  {
                    "name": "delta_x",
                    "value": null
                  },
                  {
                    "name": "modes",
                    "value": 1.15
                  }
                ],
                "type": "triangle_uncertain"
              },
              "units": "",
              "value_type": "double",
              "variable": true,
              "variable_type": "RubyContinuousVariable",
              "uuid": "dd85c497-f5bc-4e99-8885-ba65055d602a",
              "version_uuid": "35da7899-65b1-41d2-a587-9fa214aa6790"
            }
          ],
          "workflow_index": 9,
          "workflow_step_type": "Measure",
          "uuid": "222dba69-82a5-4500-88c5-01e5a092f2eb",
          "version_uuid": "eef14c60-757d-4efd-9ea3-0a39ca0f55e2"
        },
        {
          "measure_definition_class_name": "SetChilledWaterLoopTemperature",
          "measure_definition_directory": "./measures/ExampleMeasure",
          "measure_definition_display_name": "SetChilledWaterLoopTemperature",
          "measure_definition_uuid": "321be5fe-5d5b-4b6a-b2a6-cadd15b6b7eb",
          "measure_definition_version_uuid": "ac86ce11-2af8-43cf-8ac2-426b9b4c08da",
          "measure_type": "RubyMeasure",
          "arguments": [

          ],
          "display_name": "Set Chilled Water Loop Temperature",
          "name": "set_chilled_water_loop_temperature",
          "variables": [
            {
              "argument": {
                "display_name": "Desired chilled water setpoint (F)",
                "display_name_short": "Desired chilled water setpoint (F)",
                "name": "cw_temp_f",
                "value_type": "double"
              },
              "display_name": "Desired chilled water setpoint (F)",
              "display_name_short": "Desired chilled water setpoint (F)",
              "maximum": 46.0,
              "minimum": 42.0,
              "relation_to_output": "",
              "static_value": 44.0,
              "uncertainty_description": {
                "attributes": [
                  {
                    "name": "lower_bounds",
                    "value": 42.0
                  },
                  {
                    "name": "upper_bounds",
                    "value": 46.0
                  },
                  {
                    "name": "stddev",
                    "value": 0.6666666666666666
                  },
                  {
                    "name": "delta_x",
                    "value": null
                  },
                  {
                    "name": "modes",
                    "value": 44.0
                  }
                ],
                "type": "triangle_uncertain"
              },
              "units": "",
              "value_type": "double",
              "variable": true,
              "variable_type": "RubyContinuousVariable",
              "uuid": "d2ecd83b-646f-4dc9-917b-8aa7d5ba7269",
              "version_uuid": "5da6048b-46ed-43b6-8241-2c7948685b18"
            }
          ],
          "workflow_index": 10,
          "workflow_step_type": "Measure",
          "uuid": "9619194c-8c81-4125-8667-a60a8867f7aa",
          "version_uuid": "b1ce25a2-3f10-4901-8c01-86b005aec295"
        },
        {
          "measure_definition_class_name": "SetHotWaterLoopTemperature",
          "measure_definition_directory": "./measures/ExampleMeasure",
          "measure_definition_display_name": "SetHotWaterLoopTemperature",
          "measure_definition_uuid": "ac69ec9e-921c-4541-803e-491e4d82c0a7",
          "measure_definition_version_uuid": "e6385555-6b9d-410c-963c-5b61efc20904",
          "measure_type": "RubyMeasure",
          "arguments": [

          ],
          "display_name": "Set Hot Water Loop Temperature",
          "name": "set_hot_water_loop_temperature",
          "variables": [
            {
              "argument": {
                "display_name": "Desired hot water setpoint (F)",
                "display_name_short": "Desired hot water setpoint (F)",
                "name": "hw_temp_f",
                "value_type": "double"
              },
              "display_name": "Desired hot water setpoint (F)",
              "display_name_short": "Desired hot water setpoint (F)",
              "maximum": 122.0,
              "minimum": 118.0,
              "relation_to_output": "",
              "static_value": 120.0,
              "uncertainty_description": {
                "attributes": [
                  {
                    "name": "lower_bounds",
                    "value": 118.0
                  },
                  {
                    "name": "upper_bounds",
                    "value": 122.0
                  },
                  {
                    "name": "stddev",
                    "value": 0.6666666666666666
                  },
                  {
                    "name": "delta_x",
                    "value": null
                  },
                  {
                    "name": "modes",
                    "value": 120.0
                  }
                ],
                "type": "triangle_uncertain"
              },
              "units": "",
              "value_type": "double",
              "variable": true,
              "variable_type": "RubyContinuousVariable",
              "uuid": "3a97befe-63d9-403f-8e0c-e3e20252f236",
              "version_uuid": "a3f63c2e-06d0-4520-bc6c-7940d31a7669"
            }
          ],
          "workflow_index": 11,
          "workflow_step_type": "Measure",
          "uuid": "e595ff30-e45b-43bb-99db-275a2cbbeab1",
          "version_uuid": "d885a125-7b88-43bf-a72d-f30a4f5217dc"
        },
        {
          "measure_definition_class_name": "SetMinimumVAVTerminalFlowFraction",
          "measure_definition_directory": "./measures/ExampleMeasure",
          "measure_definition_display_name": "SetMinimumVAVTerminalFlowFraction",
          "measure_definition_uuid": "b8173634-e20d-40bd-a0ff-b775e2f8d38f",
          "measure_definition_version_uuid": "77b62194-f7a9-447e-8867-a68a9b13d3b0",
          "measure_type": "RubyMeasure",
          "arguments": [

          ],
          "display_name": "Set Minimum VAV Terminal Flow Fraction",
          "name": "set_minimum_vav_terminal_flow_fraction",
          "variables": [
            {
              "argument": {
                "display_name": "Minimum VAV Terminal Flow Fraction (%)",
                "display_name_short": "Minimum VAV Terminal Flow Fraction (%)",
                "name": "min_vav_frac",
                "value_type": "double"
              },
              "display_name": "Minimum VAV Terminal Flow Fraction (%)",
              "display_name_short": "Minimum VAV Terminal Flow Fraction (%)",
              "maximum": 60.0,
              "minimum": 0.0,
              "relation_to_output": "",
              "static_value": 30.0,
              "uncertainty_description": {
                "attributes": [
                  {
                    "name": "lower_bounds",
                    "value": 0.0
                  },
                  {
                    "name": "upper_bounds",
                    "value": 60.0
                  },
                  {
                    "name": "stddev",
                    "value": 10.0
                  },
                  {
                    "name": "delta_x",
                    "value": null
                  },
                  {
                    "name": "modes",
                    "value": 30.0
                  }
                ],
                "type": "triangle_uncertain"
              },
              "units": "",
              "value_type": "double",
              "variable": true,
              "variable_type": "RubyContinuousVariable",
              "uuid": "5d8b6600-de3c-4b55-be55-def37c945e58",
              "version_uuid": "ea00fe69-57e2-44fc-8c03-162cb4584d09"
            }
          ],
          "workflow_index": 12,
          "workflow_step_type": "Measure",
          "uuid": "f4f3f0be-1121-4148-aea7-b907ab7b60a0",
          "version_uuid": "5789c70e-5a94-44ba-95bc-cf1d54f7819e"
        },
        {
          "measure_definition_class_name": "ModifyEnergyPlusFanVariableVolumeObjects",
          "measure_definition_directory": "./measures/ExampleMeasure",
          "measure_definition_display_name": "ModifyEnergyPlusFanVariableVolumeObjects",
          "measure_definition_uuid": "5c59df9a-8f41-40c9-9c46-9a6fd57e60d9",
          "measure_definition_version_uuid": "7549a12e-7b97-44b8-b77f-57d7ad3199f7",
          "measure_type": "EnergyPlusMeasure",
          "arguments": [

          ],
          "display_name": "Modify EnergyPlus Fan Varaible Volume Objects",
          "name": "modify_energyplus_fan_varaible_volume_objects",
          "variables": [
            {
              "argument": {
                "display_name": "Pressure Rise (Pa).",
                "display_name_short": "Pressure Rise (Pa).",
                "name": "pressureRise",
                "value_type": "double"
              },
              "display_name": "Pressure Rise (Pa).",
              "display_name_short": "Pressure Rise (Pa).",
              "maximum": 700.0,
              "minimum": 400.0,
              "relation_to_output": "",
              "static_value": 500.0,
              "uncertainty_description": {
                "attributes": [
                  {
                    "name": "lower_bounds",
                    "value": 400.0
                  },
                  {
                    "name": "upper_bounds",
                    "value": 700.0
                  },
                  {
                    "name": "stddev",
                    "value": 50.0
                  },
                  {
                    "name": "delta_x",
                    "value": null
                  },
                  {
                    "name": "modes",
                    "value": 500.0
                  }
                ],
                "type": "triangle_uncertain"
              },
              "units": "",
              "value_type": "double",
              "variable": true,
              "variable_type": "RubyContinuousVariable",
              "uuid": "ff1f660f-d80e-4f97-9f71-b71e8604f8fe",
              "version_uuid": "9f9801b6-81a6-4b18-af0b-91af5dc803fa"
            }
          ],
          "workflow_index": 13,
          "workflow_step_type": "Measure",
          "uuid": "7bdec174-d1e2-4693-ab11-2c60173e91f4",
          "version_uuid": "5ae1e335-cba8-4b6d-bb25-fd28c80aa9ee"
        }
      ],
      "analysis_type": "rgenoud"
    },
    "seed": {
      "file_type": "OSM",
      "path": "./seed/small_seed.osm"
    },
    "weather_file": {
      "file_type": "EPW",
      "path": "./weather/partial_weather.epw"
    }
  }
}