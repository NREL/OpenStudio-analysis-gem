{
  "analysis": {
    "display_name": "Name goes here",
    "name": "name_goes_here",
    "output_variables": [
      {
        "display_name": "Total Natual Gas",
        "display_name_short": "Total Natual Gas",
        "metadata_id": null,
        "name": "total_natural_gas",
        "units": "MJ/m2",
        "objective_function": true,
        "objective_function_index": 0,
        "objective_function_target": 330.7,
        "scaling_factor": null,
        "objective_function_group": "TRUE"
      },
      {
        "display_name": "Total Electricity",
        "display_name_short": "Total Electricity",
        "metadata_id": null,
        "name": "total_electricity",
        "units": "MJ/m2",
        "objective_function": true,
        "objective_function_index": 1,
        "objective_function_target": 496.5,
        "scaling_factor": null,
        "objective_function_group": "TRUE"
      },
      {
        "display_name": "cooling_electricity_jan",
        "display_name_short": "cooling_electricity_jan",
        "metadata_id": null,
        "name": "cooling_electricity_jan",
        "units": "J",
        "objective_function": true,
        "objective_function_index": 2,
        "objective_function_target": 63597914341.3388,
        "scaling_factor": 463203800000.0,
        "objective_function_group": "TRUE"
      },
      {
        "display_name": "cooling_electricity_feb",
        "display_name_short": "cooling_electricity_feb",
        "metadata_id": null,
        "name": "cooling_electricity_feb",
        "units": "J",
        "objective_function": true,
        "objective_function_index": 3,
        "objective_function_target": 58138465958.3439,
        "scaling_factor": 463203800000.0,
        "objective_function_group": "TRUE"
      },
      {
        "display_name": "cooling_electricity_mar",
        "display_name_short": "cooling_electricity_mar",
        "metadata_id": null,
        "name": "cooling_electricity_mar",
        "units": "J",
        "objective_function": true,
        "objective_function_index": 4,
        "objective_function_target": 301531761648.05,
        "scaling_factor": 463203800000.0,
        "objective_function_group": "TRUE"
      },
      {
        "display_name": "cooling_electricity_apr",
        "display_name_short": "cooling_electricity_apr",
        "metadata_id": null,
        "name": "cooling_electricity_apr",
        "units": "J",
        "objective_function": true,
        "objective_function_index": 5,
        "objective_function_target": 336163175378.778,
        "scaling_factor": 463203800000.0,
        "objective_function_group": "TRUE"
      },
      {
        "display_name": "cooling_electricity_may",
        "display_name_short": "cooling_electricity_may",
        "metadata_id": null,
        "name": "cooling_electricity_may",
        "units": "J",
        "objective_function": true,
        "objective_function_index": 6,
        "objective_function_target": 1412749721236.32,
        "scaling_factor": 463203800000.0,
        "objective_function_group": "TRUE"
      },
      {
        "display_name": "cooling_electricity_jun",
        "display_name_short": "cooling_electricity_jun",
        "metadata_id": null,
        "name": "cooling_electricity_jun",
        "units": "J",
        "objective_function": true,
        "objective_function_index": 7,
        "objective_function_target": 2327741408781.58,
        "scaling_factor": 463203800000.0,
        "objective_function_group": "TRUE"
      },
      {
        "display_name": "cooling_electricity_jul",
        "display_name_short": "cooling_electricity_jul",
        "metadata_id": null,
        "name": "cooling_electricity_jul",
        "units": "J",
        "objective_function": true,
        "objective_function_index": 8,
        "objective_function_target": 2402590637505.39,
        "scaling_factor": 463203800000.0,
        "objective_function_group": "TRUE"
      },
      {
        "display_name": "cooling_electricity_aug",
        "display_name_short": "cooling_electricity_aug",
        "metadata_id": null,
        "name": "cooling_electricity_aug",
        "units": "J",
        "objective_function": true,
        "objective_function_index": 9,
        "objective_function_target": 2472656245279.37,
        "scaling_factor": 463203800000.0,
        "objective_function_group": "TRUE"
      },
      {
        "display_name": "cooling_electricity_sep",
        "display_name_short": "cooling_electricity_sep",
        "metadata_id": null,
        "name": "cooling_electricity_sep",
        "units": "J",
        "objective_function": true,
        "objective_function_index": 10,
        "objective_function_target": 1807432185051.14,
        "scaling_factor": 463203800000.0,
        "objective_function_group": "TRUE"
      },
      {
        "display_name": "cooling_electricity_oct",
        "display_name_short": "cooling_electricity_oct",
        "metadata_id": null,
        "name": "cooling_electricity_oct",
        "units": "J",
        "objective_function": true,
        "objective_function_index": 11,
        "objective_function_target": 619615878181.616,
        "scaling_factor": 463203800000.0,
        "objective_function_group": "TRUE"
      },
      {
        "display_name": "cooling_electricity_nov",
        "display_name_short": "cooling_electricity_nov",
        "metadata_id": null,
        "name": "cooling_electricity_nov",
        "units": "J",
        "objective_function": true,
        "objective_function_index": 12,
        "objective_function_target": 117109844324.095,
        "scaling_factor": 463203800000.0,
        "objective_function_group": "TRUE"
      },
      {
        "display_name": "cooling_electricity_dec",
        "display_name_short": "cooling_electricity_dec",
        "metadata_id": null,
        "name": "cooling_electricity_dec",
        "units": "J",
        "objective_function": true,
        "objective_function_index": 13,
        "objective_function_target": 103360013175.794,
        "scaling_factor": 463203800000.0,
        "objective_function_group": "TRUE"
      },
      {
        "display_name": "heating_gas_jan",
        "display_name_short": "heating_gas_jan",
        "metadata_id": null,
        "name": "heating_gas_jan",
        "units": "J",
        "objective_function": true,
        "objective_function_index": 14,
        "objective_function_target": 2799558466140.68,
        "scaling_factor": 463203800000.0,
        "objective_function_group": "TRUE"
      },
      {
        "display_name": "heating_gas_feb",
        "display_name_short": "heating_gas_feb",
        "metadata_id": null,
        "name": "heating_gas_feb",
        "units": "J",
        "objective_function": true,
        "objective_function_index": 15,
        "objective_function_target": 2663349812763.18,
        "scaling_factor": 463203800000.0,
        "objective_function_group": "TRUE"
      },
      {
        "display_name": "heating_gas_mar",
        "display_name_short": "heating_gas_mar",
        "metadata_id": null,
        "name": "heating_gas_mar",
        "units": "J",
        "objective_function": true,
        "objective_function_index": 16,
        "objective_function_target": 1576136833664.73,
        "scaling_factor": 463203800000.0,
        "objective_function_group": "TRUE"
      },
      {
        "display_name": "heating_gas_apr",
        "display_name_short": "heating_gas_apr",
        "metadata_id": null,
        "name": "heating_gas_apr",
        "units": "J",
        "objective_function": true,
        "objective_function_index": 17,
        "objective_function_target": 1752794439290.69,
        "scaling_factor": 463203800000.0,
        "objective_function_group": "TRUE"
      },
      {
        "display_name": "heating_gas_may",
        "display_name_short": "heating_gas_may",
        "metadata_id": null,
        "name": "heating_gas_may",
        "units": "J",
        "objective_function": true,
        "objective_function_index": 18,
        "objective_function_target": 375145279804.892,
        "scaling_factor": 463203800000.0,
        "objective_function_group": "TRUE"
      },
      {
        "display_name": "heating_gas_jun",
        "display_name_short": "heating_gas_jun",
        "metadata_id": null,
        "name": "heating_gas_jun",
        "units": "J",
        "objective_function": true,
        "objective_function_index": 19,
        "objective_function_target": 32970706746.2053,
        "scaling_factor": 463203800000.0,
        "objective_function_group": "TRUE"
      },
      {
        "display_name": "heating_gas_jul",
        "display_name_short": "heating_gas_jul",
        "metadata_id": null,
        "name": "heating_gas_jul",
        "units": "J",
        "objective_function": true,
        "objective_function_index": 20,
        "objective_function_target": 50096876832.5083,
        "scaling_factor": 463203800000.0,
        "objective_function_group": "TRUE"
      },
      {
        "display_name": "heating_gas_aug",
        "display_name_short": "heating_gas_aug",
        "metadata_id": null,
        "name": "heating_gas_aug",
        "units": "J",
        "objective_function": true,
        "objective_function_index": 21,
        "objective_function_target": 32660740137.6019,
        "scaling_factor": 463203800000.0,
        "objective_function_group": "TRUE"
      },
      {
        "display_name": "heating_gas_sep",
        "display_name_short": "heating_gas_sep",
        "metadata_id": null,
        "name": "heating_gas_sep",
        "units": "J",
        "objective_function": true,
        "objective_function_index": 22,
        "objective_function_target": 144097879467.636,
        "scaling_factor": 463203800000.0,
        "objective_function_group": "TRUE"
      },
      {
        "display_name": "heating_gas_oct",
        "display_name_short": "heating_gas_oct",
        "metadata_id": null,
        "name": "heating_gas_oct",
        "units": "J",
        "objective_function": true,
        "objective_function_index": 23,
        "objective_function_target": 970975709027.067,
        "scaling_factor": 463203800000.0,
        "objective_function_group": "TRUE"
      },
      {
        "display_name": "heating_gas_nov",
        "display_name_short": "heating_gas_nov",
        "metadata_id": null,
        "name": "heating_gas_nov",
        "units": "J",
        "objective_function": true,
        "objective_function_index": 24,
        "objective_function_target": 2261115778226.24,
        "scaling_factor": 463203800000.0,
        "objective_function_group": "TRUE"
      },
      {
        "display_name": "heating_gas_dec",
        "display_name_short": "heating_gas_dec",
        "metadata_id": null,
        "name": "heating_gas_dec",
        "units": "J",
        "objective_function": true,
        "objective_function_index": 25,
        "objective_function_target": 2657735386128.84,
        "scaling_factor": 463203800000.0,
        "objective_function_group": "TRUE"
      }
    ],
    "problem": {
      "algorithm": {
        "popsize": 30,
        "generations": 5,
        "waitgenerations": 2,
        "bfgsburnin": 2,
        "solutiontolerance": 0.01,
        "epsilongradient": 0.01,
        "pgtol": 0.01,
        "factr": 45036000000000,
        "maxit": 100,
        "normtype": "minkowski",
        "ppower": 2,
        "objective_functions": [
          "total_natural_gas",
          "total_electricity",
          "cooling_electricity_jan",
          "cooling_electricity_feb",
          "cooling_electricity_mar",
          "cooling_electricity_apr",
          "cooling_electricity_may",
          "cooling_electricity_jun",
          "cooling_electricity_jul",
          "cooling_electricity_aug",
          "cooling_electricity_sep",
          "cooling_electricity_oct",
          "cooling_electricity_nov",
          "cooling_electricity_dec",
          "heating_gas_jan",
          "heating_gas_feb",
          "heating_gas_mar",
          "heating_gas_apr",
          "heating_gas_may",
          "heating_gas_jun",
          "heating_gas_jul",
          "heating_gas_aug",
          "heating_gas_sep",
          "heating_gas_oct",
          "heating_gas_nov",
          "heating_gas_dec"
        ]
      },
      "name": "Problem",
      "workflow": [
        {
          "measure_definition_class_name": "ReduceLightingLoadsByPercentage",
          "measure_definition_directory": "./measures/ReduceLightingLoadsByPercentage",
          "measure_definition_display_name": "ReduceLightingLoadsByPercentage",
          "measure_definition_uuid": "5b734f1e-e1a4-4f2f-90fb-b75fa64293a4",
          "measure_definition_version_uuid": "977e2889-7860-474d-ae39-ecbd2c96b198",
          "measure_type": "RubyMeasure",
          "arguments": [
            {
              "display_name": "Apply the Measure to a Specific Space Type or to the Entire Model.",
              "display_name_short": "Apply the Measure to a Specific Space Type or to the Entire Model.",
              "name": "space_type",
              "value": "*Entire Building*",
              "value_type": "choice"
            },
            {
              "display_name": "Increase in Material and Installation Cost for Lighting per Floor Area (%).",
              "display_name_short": "Increase in Material and Installation Cost for Lighting per Floor Area (%).",
              "name": "material_and_installation_cost",
              "value": 0.0,
              "value_type": "double"
            },
            {
              "display_name": "Increase in Demolition Costs for Lighting per Floor Area (%).",
              "display_name_short": "Increase in Demolition Costs for Lighting per Floor Area (%).",
              "name": "demolition_cost",
              "value": 0.0,
              "value_type": "double"
            },
            {
              "display_name": "Years Until Costs Start (whole years).",
              "display_name_short": "Years Until Costs Start (whole years).",
              "name": "years_until_costs_start",
              "value": 0,
              "value_type": "integer"
            },
            {
              "display_name": "Demolition Costs Occur During Initial Construction?",
              "display_name_short": "Demolition Costs Occur During Initial Construction?",
              "name": "demo_cost_initial_const",
              "value": true,
              "value_type": "bool"
            },
            {
              "display_name": "Expected Life (whole years).",
              "display_name_short": "Expected Life (whole years).",
              "name": "expected_life",
              "value": 15,
              "value_type": "integer"
            },
            {
              "display_name": "Increase O & M Costs for Lighting per Floor Area (%).",
              "display_name_short": "Increase O & M Costs for Lighting per Floor Area (%).",
              "name": "om_cost",
              "value": 0.0,
              "value_type": "double"
            },
            {
              "display_name": "O & M Frequency (whole years).",
              "display_name_short": "O & M Frequency (whole years).",
              "name": "om_frequency",
              "value": 1,
              "value_type": "integer"
            }
          ],
          "display_name": "Reduce Lighting Loads by Percentage",
          "name": "reduce_lighting_loads_by_percentage",
          "variables": [
            {
              "argument": {
                "display_name": "Lighting Power Reduction",
                "display_name_short": "Lighting Power Reduction",
                "name": "lighting_power_reduction_percent",
                "value_type": "double"
              },
              "display_name": "Lighting Power Reduction",
              "display_name_short": "Lighting Power Reduction",
              "maximum": 20.0,
              "minimum": -20.0,
              "relation_to_output": "",
              "static_value": 0.0,
              "uncertainty_description": {
                "attributes": [
                  {
                    "name": "lower_bounds",
                    "value": -20.0
                  },
                  {
                    "name": "upper_bounds",
                    "value": 20.0
                  },
                  {
                    "name": "stddev",
                    "value": 6.666666666666667
                  },
                  {
                    "name": "delta_x",
                    "value": null
                  },
                  {
                    "name": "modes",
                    "value": -1.0
                  }
                ],
                "type": "triangle_uncertain"
              },
              "units": "",
              "value_type": "double",
              "variable": true,
              "variable_type": "RubyContinuousVariable",
              "uuid": "785e57b5-6844-449d-824a-6f1c30b0b482",
              "version_uuid": "d45c1415-ca1c-4fb9-8fb7-cd637cb56955"
            }
          ],
          "workflow_index": 0,
          "workflow_step_type": "Measure",
          "uuid": "a6ff3cd0-765e-46c3-b1e1-93049b8bb3c0",
          "version_uuid": "9851c1c4-a9c3-4764-9da2-47705e8261a2"
        },
        {
          "measure_definition_class_name": "ReduceElectricEquipmentLoadsByPercentage",
          "measure_definition_directory": "./measures/ExampleMeasure",
          "measure_definition_display_name": "ReduceElectricEquipmentLoadsByPercentage",
          "measure_definition_uuid": "1539f69c-63ed-4492-bbd4-356b51a52666",
          "measure_definition_version_uuid": "ccac4434-b6ca-49a5-8067-e8786df2805b",
          "measure_type": "RubyMeasure",
          "arguments": [
            {
              "display_name": "Apply the Measure to a Specific Space Type or to the Entire Model.",
              "display_name_short": "Apply the Measure to a Specific Space Type or to the Entire Model.",
              "name": "space_type",
              "value": "*Entire Building*",
              "value_type": "choice"
            },
            {
              "display_name": "Increase in Material and Installation Cost for Electric Equipment per Floor Area (%).",
              "display_name_short": "Increase in Material and Installation Cost for Electric Equipment per Floor Area (%).",
              "name": "material_and_installation_cost",
              "value": 0.0,
              "value_type": "double"
            },
            {
              "display_name": "Increase in Demolition Costs for Electric Equipment per Floor Area (%).",
              "display_name_short": "Increase in Demolition Costs for Electric Equipment per Floor Area (%).",
              "name": "demolition_cost",
              "value": 0.0,
              "value_type": "double"
            },
            {
              "display_name": "Years Until Costs Start (whole years).",
              "display_name_short": "Years Until Costs Start (whole years).",
              "name": "years_until_costs_start",
              "value": 0,
              "value_type": "integer"
            },
            {
              "display_name": "Demolition Costs Occur During Initial Construction?",
              "display_name_short": "Demolition Costs Occur During Initial Construction?",
              "name": "demo_cost_initial_const",
              "value": false,
              "value_type": "bool"
            },
            {
              "display_name": "Expected Life (whole years).",
              "display_name_short": "Expected Life (whole years).",
              "name": "expected_life",
              "value": 15,
              "value_type": "integer"
            },
            {
              "display_name": "Increase O & M Costs for Electric Equipment per Floor Area (%).",
              "display_name_short": "Increase O & M Costs for Electric Equipment per Floor Area (%).",
              "name": "om_cost",
              "value": 0.0,
              "value_type": "double"
            },
            {
              "display_name": "O & M Frequency (whole years).",
              "display_name_short": "O & M Frequency (whole years).",
              "name": "om_frequency",
              "value": 1,
              "value_type": "integer"
            }
          ],
          "display_name": "Reduce Electric Equipment Loads by Percentage",
          "name": "reduce_electric_equipment_loads_by_percentage",
          "variables": [
            {
              "argument": {
                "display_name": "Electric Equipment Power Reduction (%).",
                "display_name_short": "Electric Equipment Power Reduction (%).",
                "name": "elecequip_power_reduction_percent",
                "value_type": "double"
              },
              "display_name": "Electric Equipment Power Reduction (%).",
              "display_name_short": "Electric Equipment Power Reduction (%).",
              "maximum": 30.0,
              "minimum": -20.0,
              "relation_to_output": "",
              "static_value": 0.0,
              "uncertainty_description": {
                "attributes": [
                  {
                    "name": "lower_bounds",
                    "value": -20.0
                  },
                  {
                    "name": "upper_bounds",
                    "value": 30.0
                  },
                  {
                    "name": "stddev",
                    "value": 8.333333333333334
                  },
                  {
                    "name": "delta_x",
                    "value": null
                  },
                  {
                    "name": "modes",
                    "value": 0.0
                  }
                ],
                "type": "triangle_uncertain"
              },
              "units": "",
              "value_type": "double",
              "variable": true,
              "variable_type": "RubyContinuousVariable",
              "uuid": "19ede762-79de-4f1d-a8b1-e4f2ab78a9ee",
              "version_uuid": "cd18aa6a-56e8-450a-9cd4-4f1232dfd38c"
            }
          ],
          "workflow_index": 1,
          "workflow_step_type": "Measure",
          "uuid": "445688e9-906c-4733-8c54-54ce6d3941f3",
          "version_uuid": "11b6df59-9312-4e4a-a5e8-70130ec35870"
        },
        {
          "measure_definition_class_name": "ReduceSpaceInfiltrationByPercentage",
          "measure_definition_directory": "./measures/ExampleMeasure",
          "measure_definition_display_name": "ReduceSpaceInfiltrationByPercentage",
          "measure_definition_uuid": "16cd8074-a45a-4c0d-9d64-7f72bfb7ad60",
          "measure_definition_version_uuid": "c65eecc3-a7c1-48bf-8c63-f04a054b7afd",
          "measure_type": "RubyMeasure",
          "arguments": [
            {
              "display_name": "Apply the Measure to a Specific Space Type or to the Entire Model.",
              "display_name_short": "Apply the Measure to a Specific Space Type or to the Entire Model.",
              "name": "space_type",
              "value": "*Entire Building*",
              "value_type": "choice"
            },
            {
              "display_name": "Increase in Material and Installation Costs for Building per Affected Floor Area ($/ft^2).",
              "display_name_short": "Increase in Material and Installation Costs for Building per Affected Floor Area ($/ft^2).",
              "name": "material_and_installation_cost",
              "value": 0.0,
              "value_type": "double"
            },
            {
              "display_name": "O & M Costs for Construction per Affected Floor Area ($/ft^2).",
              "display_name_short": "O & M Costs for Construction per Affected Floor Area ($/ft^2).",
              "name": "om_cost",
              "value": 0.0,
              "value_type": "double"
            },
            {
              "display_name": "O & M Frequency (whole years).",
              "display_name_short": "O & M Frequency (whole years).",
              "name": "om_frequency",
              "value": 1,
              "value_type": "integer"
            }
          ],
          "display_name": "ReduceSpaceInfiltrationByPercentage",
          "name": "reducespaceinfiltrationbypercentage",
          "variables": [
            {
              "argument": {
                "display_name": "Space Infiltration Power Reduction",
                "display_name_short": "Space Infiltration Power Reduction",
                "name": "space_infiltration_reduction_percent",
                "value_type": "double"
              },
              "display_name": "Space Infiltration Power Reduction",
              "display_name_short": "Space Infiltration Power Reduction",
              "maximum": 1.0,
              "minimum": -100.0,
              "relation_to_output": "",
              "static_value": 0.0,
              "uncertainty_description": {
                "attributes": [
                  {
                    "name": "lower_bounds",
                    "value": -100.0
                  },
                  {
                    "name": "upper_bounds",
                    "value": 1.0
                  },
                  {
                    "name": "stddev",
                    "value": 16.833333333333332
                  },
                  {
                    "name": "delta_x",
                    "value": null
                  },
                  {
                    "name": "modes",
                    "value": -50.0
                  }
                ],
                "type": "uniform_uncertain"
              },
              "units": "",
              "value_type": "double",
              "variable": true,
              "variable_type": "RubyContinuousVariable",
              "uuid": "3c177333-ca19-46da-afea-e9dbfec44faa",
              "version_uuid": "e5956f7d-d1e1-4ca2-98d0-a280d23e7164"
            }
          ],
          "workflow_index": 2,
          "workflow_step_type": "Measure",
          "uuid": "be45c7d8-9372-490b-ac35-da440bd76073",
          "version_uuid": "587878a0-5bdb-4430-85fb-e54ee9742b73"
        },
        {
          "measure_definition_class_name": "AdjustTheromstatSetpointsByDegrees",
          "measure_definition_directory": "./measures/ExampleMeasure",
          "measure_definition_display_name": "AdjustTheromstatSetpointsByDegrees",
          "measure_definition_uuid": "2e0dc9ae-2b4b-4546-a179-3e9d37365059",
          "measure_definition_version_uuid": "1fcb7757-c590-4391-839d-390eba52cd15",
          "measure_type": "RubyMeasure",
          "arguments": [
            {
              "display_name": "Alter Design Day Thermostats?",
              "display_name_short": "Alter Design Day Thermostats?",
              "name": "alter_design_days",
              "value": false,
              "value_type": "bool"
            }
          ],
          "display_name": "Adjust Thermostat Setpoints by Degrees",
          "name": "adjust_thermostat_setpoints_by_degrees",
          "variables": [
            {
              "argument": {
                "display_name": "Degrees Fahrenheit to Adjust Cooling Setpoint By.",
                "display_name_short": "Degrees Fahrenheit to Adjust Cooling Setpoint By.",
                "name": "cooling_adjustment",
                "value_type": "double"
              },
              "display_name": "Degrees Fahrenheit to Adjust Cooling Setpoint By.",
              "display_name_short": "Degrees Fahrenheit to Adjust Cooling Setpoint By.",
              "maximum": 2.0,
              "minimum": -2.0,
              "relation_to_output": "",
              "static_value": 1.0,
              "uncertainty_description": {
                "attributes": [
                  {
                    "name": "lower_bounds",
                    "value": -2.0
                  },
                  {
                    "name": "upper_bounds",
                    "value": 2.0
                  },
                  {
                    "name": "stddev",
                    "value": 0.6666666666666666
                  },
                  {
                    "name": "delta_x",
                    "value": null
                  },
                  {
                    "name": "modes",
                    "value": 0.0
                  }
                ],
                "type": "uniform_uncertain"
              },
              "units": "",
              "value_type": "double",
              "variable": true,
              "variable_type": "RubyContinuousVariable",
              "uuid": "a89598af-fc1c-4ade-bb23-0b863c8b6084",
              "version_uuid": "830c48a6-f20a-4290-9fea-74ee879db76f"
            },
            {
              "argument": {
                "display_name": "Degrees Fahrenheit to Adjust heating Setpoint By.",
                "display_name_short": "Degrees Fahrenheit to Adjust heating Setpoint By.",
                "name": "heating_adjustment",
                "value_type": "double"
              },
              "display_name": "Degrees Fahrenheit to Adjust heating Setpoint By.",
              "display_name_short": "Degrees Fahrenheit to Adjust heating Setpoint By.",
              "maximum": 2.0,
              "minimum": -2.0,
              "relation_to_output": "",
              "static_value": -1.0,
              "uncertainty_description": {
                "attributes": [
                  {
                    "name": "lower_bounds",
                    "value": -2.0
                  },
                  {
                    "name": "upper_bounds",
                    "value": 2.0
                  },
                  {
                    "name": "stddev",
                    "value": 0.6666666666666666
                  },
                  {
                    "name": "delta_x",
                    "value": null
                  },
                  {
                    "name": "modes",
                    "value": 0.0
                  }
                ],
                "type": "uniform_uncertain"
              },
              "units": "",
              "value_type": "double",
              "variable": true,
              "variable_type": "RubyContinuousVariable",
              "uuid": "cd745177-9448-46a7-9db3-fa481fb68515",
              "version_uuid": "8ac3a56d-8f38-4175-9db9-ba9a11457799"
            }
          ],
          "workflow_index": 3,
          "workflow_step_type": "Measure",
          "uuid": "9837d3ea-7d3a-4388-870e-f784daa78c11",
          "version_uuid": "6eb543ba-0a84-4aff-b984-a53b5e85fd97"
        },
        {
          "measure_definition_class_name": "ReduceVentilationByPercentage",
          "measure_definition_directory": "./measures/ExampleMeasure",
          "measure_definition_display_name": "ReduceVentilationByPercentage",
          "measure_definition_uuid": "1f15c1ef-ba82-490e-a7ec-ddc513e94e62",
          "measure_definition_version_uuid": "d01422b5-0719-4ffd-868a-da6ac808a273",
          "measure_type": "RubyMeasure",
          "arguments": [
            {
              "display_name": "Apply the Measure to a Specific Space Type or to the Entire Model.",
              "display_name_short": "Apply the Measure to a Specific Space Type or to the Entire Model.",
              "name": "space_type",
              "value": "*Entire Building*",
              "value_type": "choice"
            }
          ],
          "display_name": "Reduce Ventilation By Percentage",
          "name": "reduce_ventilation_by_percentage",
          "variables": [
            {
              "argument": {
                "display_name": "Design Specification Outdoor Air Reduction (%).",
                "display_name_short": "Design Specification Outdoor Air Reduction (%).",
                "name": "design_spec_outdoor_air_reduction_percent",
                "value_type": "double"
              },
              "display_name": "Design Specification Outdoor Air Reduction (%).",
              "display_name_short": "Design Specification Outdoor Air Reduction (%).",
              "maximum": 90.0,
              "minimum": -90.0,
              "relation_to_output": "",
              "static_value": 0.0,
              "uncertainty_description": {
                "attributes": [
                  {
                    "name": "lower_bounds",
                    "value": -90.0
                  },
                  {
                    "name": "upper_bounds",
                    "value": 90.0
                  },
                  {
                    "name": "stddev",
                    "value": 30.0
                  },
                  {
                    "name": "delta_x",
                    "value": null
                  },
                  {
                    "name": "modes",
                    "value": -1.0
                  }
                ],
                "type": "triangle_uncertain"
              },
              "units": "",
              "value_type": "double",
              "variable": true,
              "variable_type": "RubyContinuousVariable",
              "uuid": "5fa4e5d6-854f-482a-b22c-1836d1e1e910",
              "version_uuid": "ed8e31b6-f0a5-4299-9bb6-a55040635581"
            }
          ],
          "workflow_index": 4,
          "workflow_step_type": "Measure",
          "uuid": "7ef5e92a-702d-4b83-9ecb-a5dbac32770f",
          "version_uuid": "8c5a3213-aee8-4352-a36a-5703190ee1dc"
        },
        {
          "measure_definition_class_name": "EnableEconomizerControl",
          "measure_definition_directory": "./measures/ExampleMeasure",
          "measure_definition_display_name": "EnableEconomizerControl",
          "measure_definition_uuid": "315ad40e-d102-41ae-96cc-dad7edd1c385",
          "measure_definition_version_uuid": "44111c8a-e10b-4c1c-8ecc-42df658a1bd3",
          "measure_type": "RubyMeasure",
          "arguments": [
            {
              "display_name": "Choose an Air Loop to Alter.",
              "display_name_short": "Choose an Air Loop to Alter.",
              "name": "object",
              "value": "*All Air Loops*",
              "value_type": "choice"
            },
            {
              "display_name": "Economizer Control Type.",
              "display_name_short": "Economizer Control Type.",
              "name": "economizer_type",
              "value": "FixedDryBulb",
              "value_type": "choice"
            },
            {
              "display_name": "Economizer Maximum Enthalpy (Btu/lb).",
              "display_name_short": "Economizer Maximum Enthalpy (Btu/lb).",
              "name": "econoMaxEnthalpy",
              "value": 28.0,
              "value_type": "double"
            },
            {
              "display_name": "Economizer Maximum Limit Dewpoint Temperature (F).",
              "display_name_short": "Economizer Maximum Limit Dewpoint Temperature (F).",
              "name": "econoMaxDewpointTemp",
              "value": 55.0,
              "value_type": "double"
            },
            {
              "display_name": "Economizer Minimum Limit Dry-Bulb Temperature (F).",
              "display_name_short": "Economizer Minimum Limit Dry-Bulb Temperature (F).",
              "name": "econoMinDryBulbTemp",
              "value": -148.0,
              "value_type": "double"
            },
            {
              "display_name": "Remove Baseline Costs From Effected AirLoopHVACOutdoorAirSystems?",
              "display_name_short": "Remove Baseline Costs From Effected AirLoopHVACOutdoorAirSystems?",
              "name": "remove_costs",
              "value": false,
              "value_type": "bool"
            },
            {
              "display_name": "Material and Installation Costs per Air Loop to Enable Economizer ($).",
              "display_name_short": "Material and Installation Costs per Air Loop to Enable Economizer ($).",
              "name": "material_cost",
              "value": 0.0,
              "value_type": "double"
            },
            {
              "display_name": "Demolition Costs per Air Loop to Enable Economizer ($).",
              "display_name_short": "Demolition Costs per Air Loop to Enable Economizer ($).",
              "name": "demolition_cost",
              "value": 0.0,
              "value_type": "double"
            },
            {
              "display_name": "Years Until Costs Start (whole years).",
              "display_name_short": "Years Until Costs Start (whole years).",
              "name": "years_until_costs_start",
              "value": 0,
              "value_type": "integer"
            },
            {
              "display_name": "Demolition Costs Occur During Initial Construction?",
              "display_name_short": "Demolition Costs Occur During Initial Construction?",
              "name": "demo_cost_initial_const",
              "value": false,
              "value_type": "bool"
            },
            {
              "display_name": "Expected Life (whole years).",
              "display_name_short": "Expected Life (whole years).",
              "name": "expected_life",
              "value": 20,
              "value_type": "integer"
            },
            {
              "display_name": "O & M Costs per Air Loop for Economizer  ($).",
              "display_name_short": "O & M Costs per Air Loop for Economizer  ($).",
              "name": "om_cost",
              "value": 0.0,
              "value_type": "double"
            },
            {
              "display_name": "O & M Frequency (whole years).",
              "display_name_short": "O & M Frequency (whole years).",
              "name": "om_frequency",
              "value": 1,
              "value_type": "integer"
            }
          ],
          "display_name": "Enable Economizer Control",
          "name": "enable_economizer_control",
          "variables": [
            {
              "argument": {
                "display_name": "Economizer Maximum Limit Dry-Bulb Temperature (F).",
                "display_name_short": "Economizer Maximum Limit Dry-Bulb Temperature (F).",
                "name": "econoMaxDryBulbTemp",
                "value_type": "double"
              },
              "display_name": "Economizer Maximum Limit Dry-Bulb Temperature (F).",
              "display_name_short": "Economizer Maximum Limit Dry-Bulb Temperature (F).",
              "maximum": 80.0,
              "minimum": 76.0,
              "relation_to_output": "",
              "static_value": 79.0,
              "uncertainty_description": {
                "attributes": [
                  {
                    "name": "lower_bounds",
                    "value": 76.0
                  },
                  {
                    "name": "upper_bounds",
                    "value": 80.0
                  },
                  {
                    "name": "stddev",
                    "value": 0.6666666666666666
                  },
                  {
                    "name": "delta_x",
                    "value": null
                  },
                  {
                    "name": "modes",
                    "value": 78.0
                  }
                ],
                "type": "triangle_uncertain"
              },
              "units": "",
              "value_type": "double",
              "variable": true,
              "variable_type": "RubyContinuousVariable",
              "uuid": "2283d578-1b35-40fe-a2a9-d6134d032645",
              "version_uuid": "e79bf080-a8a0-4c78-a832-e0ec2b8b785a"
            }
          ],
          "workflow_index": 5,
          "workflow_step_type": "Measure",
          "uuid": "05fbbc09-9be9-4ce8-9843-efb1041637c6",
          "version_uuid": "22934b51-42d3-4745-bf42-6dc3a50712b4"
        },
        {
          "measure_definition_class_name": "SetBoilerThermalEfficiency",
          "measure_definition_directory": "./measures/ExampleMeasure",
          "measure_definition_display_name": "SetBoilerThermalEfficiency",
          "measure_definition_uuid": "19a604f7-aa5a-45a0-b1c9-0d1f342878bd",
          "measure_definition_version_uuid": "37bcaaf0-6aac-4385-964d-c2b7623cbb53",
          "measure_type": "RubyMeasure",
          "arguments": [
            {
              "display_name": "Apply the measure to",
              "display_name_short": "Apply the measure to",
              "name": "boiler_widget",
              "value": "*All boilers*",
              "value_type": "choice"
            },
            {
              "display_name": "Option 1, set boiler nominal thermal efficiency to a user defined value",
              "display_name_short": "Option 1, set boiler nominal thermal efficiency to a user defined value",
              "name": "input_option_manual",
              "value": true,
              "value_type": "bool"
            },
            {
              "display_name": "Option 2, set boiler nominal thermal efficiency based on ASHRAE Standard 90.1 requirement",
              "display_name_short": "Option 2, set boiler nominal thermal efficiency based on ASHRAE Standard 90.1 requirement",
              "name": "input_option_standard",
              "value": false,
              "value_type": "bool"
            },
            {
              "display_name": "Boiler nominal capacity [W]",
              "display_name_short": "Boiler nominal capacity [W]",
              "name": "nominal_capacity",
              "value": 0.0,
              "value_type": "double"
            },
            {
              "display_name": "Fuel type",
              "display_name_short": "Fuel type",
              "name": "fuel_type_widget",
              "value": 0.0,
              "value_type": "choice"
            },
            {
              "display_name": "ASHRAE Standards 90.1",
              "display_name_short": "ASHRAE Standards 90.1",
              "name": "standards_widget",
              "value": 0.0,
              "value_type": "choice"
            }
          ],
          "display_name": "Set Boiler Thermal Efficiency",
          "name": "set_boiler_thermal_efficiency",
          "variables": [
            {
              "argument": {
                "display_name": "Boiler nominal thermal efficiency (between 0 and 1)",
                "display_name_short": "Boiler nominal thermal efficiency (between 0 and 1)",
                "name": "boiler_thermal_efficiency",
                "value_type": "double"
              },
              "display_name": "Boiler nominal thermal efficiency (between 0 and 1)",
              "display_name_short": "Boiler nominal thermal efficiency (between 0 and 1)",
              "maximum": 0.9,
              "minimum": 0.5,
              "relation_to_output": "",
              "static_value": 0.8,
              "uncertainty_description": {
                "attributes": [
                  {
                    "name": "lower_bounds",
                    "value": 0.5
                  },
                  {
                    "name": "upper_bounds",
                    "value": 0.9
                  },
                  {
                    "name": "stddev",
                    "value": 0.06666666666666667
                  },
                  {
                    "name": "delta_x",
                    "value": null
                  },
                  {
                    "name": "modes",
                    "value": 0.75
                  }
                ],
                "type": "triangle_uncertain"
              },
              "units": "",
              "value_type": "double",
              "variable": true,
              "variable_type": "RubyContinuousVariable",
              "uuid": "53f67136-619b-4ab1-b894-df4c5386e48b",
              "version_uuid": "44686805-665a-474c-a6e0-e72a178d1ee5"
            }
          ],
          "workflow_index": 6,
          "workflow_step_type": "Measure",
          "uuid": "f2d196e0-813e-4732-874d-4e805e9e2919",
          "version_uuid": "a6025f86-480b-4df9-91e0-16ca3e93a7dd"
        },
        {
          "measure_definition_class_name": "IncreaseInsulationRValueForExteriorWalls",
          "measure_definition_directory": "./measures/ExampleMeasure",
          "measure_definition_display_name": "IncreaseInsulationRValueForExteriorWalls",
          "measure_definition_uuid": "babae2de-24fd-402c-9718-74495041fa1a",
          "measure_definition_version_uuid": "9417a610-c4a1-4149-88ec-6d25019ce456",
          "measure_type": "RubyMeasure",
          "arguments": [
            {
              "display_name": "Allow both increase and decrease in R-value to reach requested target?",
              "display_name_short": "Allow both increase and decrease in R-value to reach requested target?",
              "name": "allow_reduction",
              "value": true,
              "value_type": "bool"
            },
            {
              "display_name": "Increase in Material and Installation Costs for Construction per Area Used ($/ft^2).",
              "display_name_short": "Increase in Material and Installation Costs for Construction per Area Used ($/ft^2).",
              "name": "material_cost_increase_ip",
              "value": 0.0,
              "value_type": "double"
            },
            {
              "display_name": "One Time Retrofit Cost to Add Insulation to Construction ($/ft^2).",
              "display_name_short": "One Time Retrofit Cost to Add Insulation to Construction ($/ft^2).",
              "name": "one_time_retrofit_cost_ip",
              "value": 0.0,
              "value_type": "double"
            },
            {
              "display_name": "Year to Incur One Time Retrofit Cost (whole years).",
              "display_name_short": "Year to Incur One Time Retrofit Cost (whole years).",
              "name": "years_until_retrofit_cost",
              "value": 0,
              "value_type": "integer"
            }
          ],
          "display_name": "Set R-value of Insulation for Exterior Walls to a Specific Value",
          "name": "set_r_value_of_insulation_for_exterior_walls_to_a_specific_value",
          "variables": [
            {
              "argument": {
                "display_name": "Insulation R-value (ft^2*h*R/Btu).",
                "display_name_short": "Insulation R-value (ft^2*h*R/Btu).",
                "name": "r_value",
                "value_type": "double"
              },
              "display_name": "Insulation R-value (ft^2*h*R/Btu).",
              "display_name_short": "Insulation R-value (ft^2*h*R/Btu).",
              "maximum": 5.0,
              "minimum": 1.0,
              "relation_to_output": "",
              "static_value": 5.0,
              "uncertainty_description": {
                "attributes": [
                  {
                    "name": "lower_bounds",
                    "value": 1.0
                  },
                  {
                    "name": "upper_bounds",
                    "value": 5.0
                  },
                  {
                    "name": "stddev",
                    "value": 0.6666666666666666
                  },
                  {
                    "name": "delta_x",
                    "value": null
                  },
                  {
                    "name": "modes",
                    "value": 2.5
                  }
                ],
                "type": "triangle_uncertain"
              },
              "units": "",
              "value_type": "double",
              "variable": true,
              "variable_type": "RubyContinuousVariable",
              "uuid": "b5ce8800-adc8-44c5-b20e-bd2b554f1dc7",
              "version_uuid": "3574f922-2d87-4e01-affd-d0158fa97151"
            }
          ],
          "workflow_index": 7,
          "workflow_step_type": "Measure",
          "uuid": "9665f57a-69af-44d8-8a68-54b50d3b6d7f",
          "version_uuid": "f038d405-da2a-4475-9f0b-5c8f1576affa"
        },
        {
          "measure_definition_class_name": "SetChillerCOP",
          "measure_definition_directory": "./measures/ExampleMeasure",
          "measure_definition_display_name": "SetChillerCOP",
          "measure_definition_uuid": "984a0484-9613-4bce-846d-49c9e45932c0",
          "measure_definition_version_uuid": "ee4b6c77-f0cc-4471-842e-1f6ee2bc25ea",
          "measure_type": "RubyMeasure",
          "arguments": [
            {
              "display_name": "Apply the measure to",
              "display_name_short": "Apply the measure to",
              "name": "chiller_widget",
              "value": "*All chillers*",
              "value_type": "choice"
            }
          ],
          "display_name": "SetChillerCOP",
          "name": "setchillercop",
          "variables": [
            {
              "argument": {
                "display_name": "Chiller Rated COP (more than 0)",
                "display_name_short": "Chiller Rated COP (more than 0)",
                "name": "chiller_thermal_efficiency",
                "value_type": "double"
              },
              "display_name": "Chiller Rated COP (more than 0)",
              "display_name_short": "Chiller Rated COP (more than 0)",
              "maximum": 5.5,
              "minimum": 2.5,
              "relation_to_output": "",
              "static_value": 3.0,
              "uncertainty_description": {
                "attributes": [
                  {
                    "name": "lower_bounds",
                    "value": 2.5
                  },
                  {
                    "name": "upper_bounds",
                    "value": 5.5
                  },
                  {
                    "name": "stddev",
                    "value": 0.5
                  },
                  {
                    "name": "delta_x",
                    "value": null
                  },
                  {
                    "name": "modes",
                    "value": 3.5
                  }
                ],
                "type": "triangle_uncertain"
              },
              "units": "",
              "value_type": "double",
              "variable": true,
              "variable_type": "RubyContinuousVariable",
              "uuid": "a699a9d2-df6b-4c57-8c89-32b91c830cae",
              "version_uuid": "60870e9e-a0ce-4fba-b219-75a1942a6fb7"
            }
          ],
          "workflow_index": 8,
          "workflow_step_type": "Measure",
          "uuid": "9178ee2e-a833-4533-b61c-70d223c53b6b",
          "version_uuid": "1f5579c2-5321-41b4-9692-8d384c69d825"
        },
        {
          "measure_definition_class_name": "SetHeatingandCoolingSizingFactors",
          "measure_definition_directory": "./measures/ExampleMeasure",
          "measure_definition_display_name": "SetHeatingandCoolingSizingFactors",
          "measure_definition_uuid": "21b7e516-008f-422c-a069-eef1374b665d",
          "measure_definition_version_uuid": "679e33f2-0957-44d4-8256-9d86545ea5b1",
          "measure_type": "RubyMeasure",
          "arguments": [

          ],
          "display_name": "Set Heating and Cooling Sizing Factors",
          "name": "set_heating_and_cooling_sizing_factors",
          "variables": [
            {
              "argument": {
                "display_name": "Heating Sizing Factor (eg 1.25 = 125% of required heating capacity.",
                "display_name_short": "Heating Sizing Factor (eg 1.25 = 125% of required heating capacity.",
                "name": "htg_sz_factor",
                "value_type": "double"
              },
              "display_name": "Heating Sizing Factor (eg 1.25 = 125% of required heating capacity.",
              "display_name_short": "Heating Sizing Factor (eg 1.25 = 125% of required heating capacity.",
              "maximum": 1.5,
              "minimum": 1.0,
              "relation_to_output": "",
              "static_value": 1.25,
              "uncertainty_description": {
                "attributes": [
                  {
                    "name": "lower_bounds",
                    "value": 1.0
                  },
                  {
                    "name": "upper_bounds",
                    "value": 1.5
                  },
                  {
                    "name": "stddev",
                    "value": 0.08333333333333333
                  },
                  {
                    "name": "delta_x",
                    "value": null
                  },
                  {
                    "name": "modes",
                    "value": 1.25
                  }
                ],
                "type": "triangle_uncertain"
              },
              "units": "",
              "value_type": "double",
              "variable": true,
              "variable_type": "RubyContinuousVariable",
              "uuid": "9934d219-41e3-44e8-9960-f6bbe21b234e",
              "version_uuid": "3f3dee9d-6f0e-41c9-845b-c82239c3809f"
            },
            {
              "argument": {
                "display_name": "Coolinig Sizing Factor (eg 1.15 = 115% of required cooling capacity.",
                "display_name_short": "Coolinig Sizing Factor (eg 1.15 = 115% of required cooling capacity.",
                "name": "clg_sz_factor",
                "value_type": "double"
              },
              "display_name": "Coolinig Sizing Factor (eg 1.15 = 115% of required cooling capacity.",
              "display_name_short": "Coolinig Sizing Factor (eg 1.15 = 115% of required cooling capacity.",
              "maximum": 1.5,
              "minimum": 1.0,
              "relation_to_output": "",
              "static_value": 1.15,
              "uncertainty_description": {
                "attributes": [
                  {
                    "name": "lower_bounds",
                    "value": 1.0
                  },
                  {
                    "name": "upper_bounds",
                    "value": 1.5
                  },
                  {
                    "name": "stddev",
                    "value": 0.08333333333333333
                  },
                  {
                    "name": "delta_x",
                    "value": null
                  },
                  {
                    "name": "modes",
                    "value": 1.15
                  }
                ],
                "type": "triangle_uncertain"
              },
              "units": "",
              "value_type": "double",
              "variable": true,
              "variable_type": "RubyContinuousVariable",
              "uuid": "e0f06934-15da-487b-bdc9-76358a52a139",
              "version_uuid": "e4b5c575-4a34-4385-8a49-659a3aa2a531"
            }
          ],
          "workflow_index": 9,
          "workflow_step_type": "Measure",
          "uuid": "9cb9c4a7-b31f-4f82-bf1e-465562212f7c",
          "version_uuid": "2e54bb6e-f161-4a9e-9972-a55ee666a95c"
        },
        {
          "measure_definition_class_name": "SetChilledWaterLoopTemperature",
          "measure_definition_directory": "./measures/ExampleMeasure",
          "measure_definition_display_name": "SetChilledWaterLoopTemperature",
          "measure_definition_uuid": "9d145035-5646-4928-85f2-2b8a00081bb9",
          "measure_definition_version_uuid": "f8ed3a33-4eb8-4f32-abeb-1b96a0c932af",
          "measure_type": "RubyMeasure",
          "arguments": [

          ],
          "display_name": "Set Chilled Water Loop Temperature",
          "name": "set_chilled_water_loop_temperature",
          "variables": [
            {
              "argument": {
                "display_name": "Desired chilled water setpoint (F)",
                "display_name_short": "Desired chilled water setpoint (F)",
                "name": "cw_temp_f",
                "value_type": "double"
              },
              "display_name": "Desired chilled water setpoint (F)",
              "display_name_short": "Desired chilled water setpoint (F)",
              "maximum": 46.0,
              "minimum": 42.0,
              "relation_to_output": "",
              "static_value": 44.0,
              "uncertainty_description": {
                "attributes": [
                  {
                    "name": "lower_bounds",
                    "value": 42.0
                  },
                  {
                    "name": "upper_bounds",
                    "value": 46.0
                  },
                  {
                    "name": "stddev",
                    "value": 0.6666666666666666
                  },
                  {
                    "name": "delta_x",
                    "value": null
                  },
                  {
                    "name": "modes",
                    "value": 44.0
                  }
                ],
                "type": "triangle_uncertain"
              },
              "units": "",
              "value_type": "double",
              "variable": true,
              "variable_type": "RubyContinuousVariable",
              "uuid": "d8297760-6d9c-488a-b622-c83b389f7a65",
              "version_uuid": "98ab1d00-3dac-489f-a53c-17129aec9894"
            }
          ],
          "workflow_index": 10,
          "workflow_step_type": "Measure",
          "uuid": "b9072d1a-a8ed-4162-8bbc-06614b4c88f3",
          "version_uuid": "b2dc9cfe-ab7a-4000-ac56-b58192f117fe"
        },
        {
          "measure_definition_class_name": "SetHotWaterLoopTemperature",
          "measure_definition_directory": "./measures/ExampleMeasure",
          "measure_definition_display_name": "SetHotWaterLoopTemperature",
          "measure_definition_uuid": "984c49f7-499d-40c1-a8c7-4be3e6c4818e",
          "measure_definition_version_uuid": "b2b86b22-e1eb-4b88-8f85-fe3711e08050",
          "measure_type": "RubyMeasure",
          "arguments": [

          ],
          "display_name": "Set Hot Water Loop Temperature",
          "name": "set_hot_water_loop_temperature",
          "variables": [
            {
              "argument": {
                "display_name": "Desired hot water setpoint (F)",
                "display_name_short": "Desired hot water setpoint (F)",
                "name": "hw_temp_f",
                "value_type": "double"
              },
              "display_name": "Desired hot water setpoint (F)",
              "display_name_short": "Desired hot water setpoint (F)",
              "maximum": 122.0,
              "minimum": 118.0,
              "relation_to_output": "",
              "static_value": 120.0,
              "uncertainty_description": {
                "attributes": [
                  {
                    "name": "lower_bounds",
                    "value": 118.0
                  },
                  {
                    "name": "upper_bounds",
                    "value": 122.0
                  },
                  {
                    "name": "stddev",
                    "value": 0.6666666666666666
                  },
                  {
                    "name": "delta_x",
                    "value": null
                  },
                  {
                    "name": "modes",
                    "value": 120.0
                  }
                ],
                "type": "triangle_uncertain"
              },
              "units": "",
              "value_type": "double",
              "variable": true,
              "variable_type": "RubyContinuousVariable",
              "uuid": "9548e7d3-b187-4c85-9f2b-e6d4aeda2390",
              "version_uuid": "28f432ff-fae2-49f0-bfdc-c83462e8f237"
            }
          ],
          "workflow_index": 11,
          "workflow_step_type": "Measure",
          "uuid": "6698b508-173a-4209-bf61-3285b05789b2",
          "version_uuid": "d907a03b-10cb-43ae-ab97-658c7c9c8f8c"
        },
        {
          "measure_definition_class_name": "SetMinimumVAVTerminalFlowFraction",
          "measure_definition_directory": "./measures/ExampleMeasure",
          "measure_definition_display_name": "SetMinimumVAVTerminalFlowFraction",
          "measure_definition_uuid": "287c5af7-1c0e-4d86-bb3b-d8508dc2c23d",
          "measure_definition_version_uuid": "2037e2b5-934a-4b0e-9393-9d6f25fe47cb",
          "measure_type": "RubyMeasure",
          "arguments": [

          ],
          "display_name": "Set Minimum VAV Terminal Flow Fraction",
          "name": "set_minimum_vav_terminal_flow_fraction",
          "variables": [
            {
              "argument": {
                "display_name": "Minimum VAV Terminal Flow Fraction (%)",
                "display_name_short": "Minimum VAV Terminal Flow Fraction (%)",
                "name": "min_vav_frac",
                "value_type": "double"
              },
              "display_name": "Minimum VAV Terminal Flow Fraction (%)",
              "display_name_short": "Minimum VAV Terminal Flow Fraction (%)",
              "maximum": 60.0,
              "minimum": 0.0,
              "relation_to_output": "",
              "static_value": 30.0,
              "uncertainty_description": {
                "attributes": [
                  {
                    "name": "lower_bounds",
                    "value": 0.0
                  },
                  {
                    "name": "upper_bounds",
                    "value": 60.0
                  },
                  {
                    "name": "stddev",
                    "value": 10.0
                  },
                  {
                    "name": "delta_x",
                    "value": null
                  },
                  {
                    "name": "modes",
                    "value": 30.0
                  }
                ],
                "type": "triangle_uncertain"
              },
              "units": "",
              "value_type": "double",
              "variable": true,
              "variable_type": "RubyContinuousVariable",
              "uuid": "aa52df75-68a5-44bf-9163-370c6546e0ee",
              "version_uuid": "11c6ed86-a7c3-44c6-a437-ea2993660a09"
            }
          ],
          "workflow_index": 12,
          "workflow_step_type": "Measure",
          "uuid": "dacf413f-239c-43e9-92db-9b414af34b50",
          "version_uuid": "9fd5cd98-54ad-467f-901d-8825d2b0f7c5"
        },
        {
          "measure_definition_class_name": "ModifyEnergyPlusFanVariableVolumeObjects",
          "measure_definition_directory": "./measures/ExampleMeasure",
          "measure_definition_display_name": "ModifyEnergyPlusFanVariableVolumeObjects",
          "measure_definition_uuid": "8a395169-70f2-44ec-b8a9-018d634696c8",
          "measure_definition_version_uuid": "b336b0c2-25eb-4021-a1b1-13f06a1cd6c0",
          "measure_type": "EnergyPlusMeasure",
          "arguments": [

          ],
          "display_name": "Modify EnergyPlus Fan Varaible Volume Objects",
          "name": "modify_energyplus_fan_varaible_volume_objects",
          "variables": [
            {
              "argument": {
                "display_name": "Pressure Rise (Pa).",
                "display_name_short": "Pressure Rise (Pa).",
                "name": "pressureRise",
                "value_type": "double"
              },
              "display_name": "Pressure Rise (Pa).",
              "display_name_short": "Pressure Rise (Pa).",
              "maximum": 700.0,
              "minimum": 400.0,
              "relation_to_output": "",
              "static_value": 500.0,
              "uncertainty_description": {
                "attributes": [
                  {
                    "name": "lower_bounds",
                    "value": 400.0
                  },
                  {
                    "name": "upper_bounds",
                    "value": 700.0
                  },
                  {
                    "name": "stddev",
                    "value": 50.0
                  },
                  {
                    "name": "delta_x",
                    "value": null
                  },
                  {
                    "name": "modes",
                    "value": 500.0
                  }
                ],
                "type": "triangle_uncertain"
              },
              "units": "",
              "value_type": "double",
              "variable": true,
              "variable_type": "RubyContinuousVariable",
              "uuid": "bb4e7edb-31c2-4a38-ab7e-79539e226851",
              "version_uuid": "f822aac1-16c4-4dd6-b3fc-bb4138a4b417"
            }
          ],
          "workflow_index": 13,
          "workflow_step_type": "Measure",
          "uuid": "1e090b35-eef6-458a-ba11-dd7db2966f57",
          "version_uuid": "e32662e0-4130-4fcc-a4be-14908ffafc20"
        }
      ],
      "analysis_type": "rgenoud"
    },
    "seed": {
      "file_type": "OSM",
      "path": "./seed/small_seed.osm"
    },
    "weather_file": {
      "file_type": "EPW",
      "path": "./weather/partial_weather.epw"
    }
  }
}