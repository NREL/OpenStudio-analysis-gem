{
  "analysis": {
    "display_name": "Name goes here",
    "name": "name_goes_here",
    "output_variables": [
      {
        "display_name": "Total Natual Gas",
        "display_name_short": "Total Natual Gas",
        "metadata_id": null,
        "name": "total_natural_gas",
        "units": "MJ/m2",
        "objective_function": true,
        "objective_function_index": 0,
        "objective_function_target": 330.7,
        "scaling_factor": null,
        "objective_function_group": "TRUE"
      },
      {
        "display_name": "Total Electricity",
        "display_name_short": "Total Electricity",
        "metadata_id": null,
        "name": "total_electricity",
        "units": "MJ/m2",
        "objective_function": true,
        "objective_function_index": 1,
        "objective_function_target": 496.5,
        "scaling_factor": null,
        "objective_function_group": "TRUE"
      },
      {
        "display_name": "cooling_electricity_jan",
        "display_name_short": "cooling_electricity_jan",
        "metadata_id": null,
        "name": "cooling_electricity_jan",
        "units": "J",
        "objective_function": true,
        "objective_function_index": 2,
        "objective_function_target": 63597914341.3388,
        "scaling_factor": 463203800000.0,
        "objective_function_group": "TRUE"
      },
      {
        "display_name": "cooling_electricity_feb",
        "display_name_short": "cooling_electricity_feb",
        "metadata_id": null,
        "name": "cooling_electricity_feb",
        "units": "J",
        "objective_function": true,
        "objective_function_index": 3,
        "objective_function_target": 58138465958.3439,
        "scaling_factor": 463203800000.0,
        "objective_function_group": "TRUE"
      },
      {
        "display_name": "cooling_electricity_mar",
        "display_name_short": "cooling_electricity_mar",
        "metadata_id": null,
        "name": "cooling_electricity_mar",
        "units": "J",
        "objective_function": true,
        "objective_function_index": 4,
        "objective_function_target": 301531761648.05,
        "scaling_factor": 463203800000.0,
        "objective_function_group": "TRUE"
      },
      {
        "display_name": "cooling_electricity_apr",
        "display_name_short": "cooling_electricity_apr",
        "metadata_id": null,
        "name": "cooling_electricity_apr",
        "units": "J",
        "objective_function": true,
        "objective_function_index": 5,
        "objective_function_target": 336163175378.778,
        "scaling_factor": 463203800000.0,
        "objective_function_group": "TRUE"
      },
      {
        "display_name": "cooling_electricity_may",
        "display_name_short": "cooling_electricity_may",
        "metadata_id": null,
        "name": "cooling_electricity_may",
        "units": "J",
        "objective_function": true,
        "objective_function_index": 6,
        "objective_function_target": 1412749721236.32,
        "scaling_factor": 463203800000.0,
        "objective_function_group": "TRUE"
      },
      {
        "display_name": "cooling_electricity_jun",
        "display_name_short": "cooling_electricity_jun",
        "metadata_id": null,
        "name": "cooling_electricity_jun",
        "units": "J",
        "objective_function": true,
        "objective_function_index": 7,
        "objective_function_target": 2327741408781.58,
        "scaling_factor": 463203800000.0,
        "objective_function_group": "TRUE"
      },
      {
        "display_name": "cooling_electricity_jul",
        "display_name_short": "cooling_electricity_jul",
        "metadata_id": null,
        "name": "cooling_electricity_jul",
        "units": "J",
        "objective_function": true,
        "objective_function_index": 8,
        "objective_function_target": 2402590637505.39,
        "scaling_factor": 463203800000.0,
        "objective_function_group": "TRUE"
      },
      {
        "display_name": "cooling_electricity_aug",
        "display_name_short": "cooling_electricity_aug",
        "metadata_id": null,
        "name": "cooling_electricity_aug",
        "units": "J",
        "objective_function": true,
        "objective_function_index": 9,
        "objective_function_target": 2472656245279.37,
        "scaling_factor": 463203800000.0,
        "objective_function_group": "TRUE"
      },
      {
        "display_name": "cooling_electricity_sep",
        "display_name_short": "cooling_electricity_sep",
        "metadata_id": null,
        "name": "cooling_electricity_sep",
        "units": "J",
        "objective_function": true,
        "objective_function_index": 10,
        "objective_function_target": 1807432185051.14,
        "scaling_factor": 463203800000.0,
        "objective_function_group": "TRUE"
      },
      {
        "display_name": "cooling_electricity_oct",
        "display_name_short": "cooling_electricity_oct",
        "metadata_id": null,
        "name": "cooling_electricity_oct",
        "units": "J",
        "objective_function": true,
        "objective_function_index": 11,
        "objective_function_target": 619615878181.616,
        "scaling_factor": 463203800000.0,
        "objective_function_group": "TRUE"
      },
      {
        "display_name": "cooling_electricity_nov",
        "display_name_short": "cooling_electricity_nov",
        "metadata_id": null,
        "name": "cooling_electricity_nov",
        "units": "J",
        "objective_function": true,
        "objective_function_index": 12,
        "objective_function_target": 117109844324.095,
        "scaling_factor": 463203800000.0,
        "objective_function_group": "TRUE"
      },
      {
        "display_name": "cooling_electricity_dec",
        "display_name_short": "cooling_electricity_dec",
        "metadata_id": null,
        "name": "cooling_electricity_dec",
        "units": "J",
        "objective_function": true,
        "objective_function_index": 13,
        "objective_function_target": 103360013175.794,
        "scaling_factor": 463203800000.0,
        "objective_function_group": "TRUE"
      },
      {
        "display_name": "heating_gas_jan",
        "display_name_short": "heating_gas_jan",
        "metadata_id": null,
        "name": "heating_gas_jan",
        "units": "J",
        "objective_function": true,
        "objective_function_index": 14,
        "objective_function_target": 2799558466140.68,
        "scaling_factor": 463203800000.0,
        "objective_function_group": "TRUE"
      },
      {
        "display_name": "heating_gas_feb",
        "display_name_short": "heating_gas_feb",
        "metadata_id": null,
        "name": "heating_gas_feb",
        "units": "J",
        "objective_function": true,
        "objective_function_index": 15,
        "objective_function_target": 2663349812763.18,
        "scaling_factor": 463203800000.0,
        "objective_function_group": "TRUE"
      },
      {
        "display_name": "heating_gas_mar",
        "display_name_short": "heating_gas_mar",
        "metadata_id": null,
        "name": "heating_gas_mar",
        "units": "J",
        "objective_function": true,
        "objective_function_index": 16,
        "objective_function_target": 1576136833664.73,
        "scaling_factor": 463203800000.0,
        "objective_function_group": "TRUE"
      },
      {
        "display_name": "heating_gas_apr",
        "display_name_short": "heating_gas_apr",
        "metadata_id": null,
        "name": "heating_gas_apr",
        "units": "J",
        "objective_function": true,
        "objective_function_index": 17,
        "objective_function_target": 1752794439290.69,
        "scaling_factor": 463203800000.0,
        "objective_function_group": "TRUE"
      },
      {
        "display_name": "heating_gas_may",
        "display_name_short": "heating_gas_may",
        "metadata_id": null,
        "name": "heating_gas_may",
        "units": "J",
        "objective_function": true,
        "objective_function_index": 18,
        "objective_function_target": 375145279804.892,
        "scaling_factor": 463203800000.0,
        "objective_function_group": "TRUE"
      },
      {
        "display_name": "heating_gas_jun",
        "display_name_short": "heating_gas_jun",
        "metadata_id": null,
        "name": "heating_gas_jun",
        "units": "J",
        "objective_function": true,
        "objective_function_index": 19,
        "objective_function_target": 32970706746.2053,
        "scaling_factor": 463203800000.0,
        "objective_function_group": "TRUE"
      },
      {
        "display_name": "heating_gas_jul",
        "display_name_short": "heating_gas_jul",
        "metadata_id": null,
        "name": "heating_gas_jul",
        "units": "J",
        "objective_function": true,
        "objective_function_index": 20,
        "objective_function_target": 50096876832.5083,
        "scaling_factor": 463203800000.0,
        "objective_function_group": "TRUE"
      },
      {
        "display_name": "heating_gas_aug",
        "display_name_short": "heating_gas_aug",
        "metadata_id": null,
        "name": "heating_gas_aug",
        "units": "J",
        "objective_function": true,
        "objective_function_index": 21,
        "objective_function_target": 32660740137.6019,
        "scaling_factor": 463203800000.0,
        "objective_function_group": "TRUE"
      },
      {
        "display_name": "heating_gas_sep",
        "display_name_short": "heating_gas_sep",
        "metadata_id": null,
        "name": "heating_gas_sep",
        "units": "J",
        "objective_function": true,
        "objective_function_index": 22,
        "objective_function_target": 144097879467.636,
        "scaling_factor": 463203800000.0,
        "objective_function_group": "TRUE"
      },
      {
        "display_name": "heating_gas_oct",
        "display_name_short": "heating_gas_oct",
        "metadata_id": null,
        "name": "heating_gas_oct",
        "units": "J",
        "objective_function": true,
        "objective_function_index": 23,
        "objective_function_target": 970975709027.067,
        "scaling_factor": 463203800000.0,
        "objective_function_group": "TRUE"
      },
      {
        "display_name": "heating_gas_nov",
        "display_name_short": "heating_gas_nov",
        "metadata_id": null,
        "name": "heating_gas_nov",
        "units": "J",
        "objective_function": true,
        "objective_function_index": 24,
        "objective_function_target": 2261115778226.24,
        "scaling_factor": 463203800000.0,
        "objective_function_group": "TRUE"
      },
      {
        "display_name": "heating_gas_dec",
        "display_name_short": "heating_gas_dec",
        "metadata_id": null,
        "name": "heating_gas_dec",
        "units": "J",
        "objective_function": true,
        "objective_function_index": 25,
        "objective_function_target": 2657735386128.84,
        "scaling_factor": 463203800000.0,
        "objective_function_group": "TRUE"
      }
    ],
    "problem": {
      "algorithm": {
        "popsize": 30,
        "generations": 5,
        "waitgenerations": 2,
        "bfgsburnin": 2,
        "solutiontolerance": 0.01,
        "epsilongradient": 0.01,
        "pgtol": 0.01,
        "factr": 45036000000000,
        "maxit": 100,
        "normtype": "minkowski",
        "ppower": 2,
        "objective_functions": [
          "total_natural_gas",
          "total_electricity",
          "cooling_electricity_jan",
          "cooling_electricity_feb",
          "cooling_electricity_mar",
          "cooling_electricity_apr",
          "cooling_electricity_may",
          "cooling_electricity_jun",
          "cooling_electricity_jul",
          "cooling_electricity_aug",
          "cooling_electricity_sep",
          "cooling_electricity_oct",
          "cooling_electricity_nov",
          "cooling_electricity_dec",
          "heating_gas_jan",
          "heating_gas_feb",
          "heating_gas_mar",
          "heating_gas_apr",
          "heating_gas_may",
          "heating_gas_jun",
          "heating_gas_jul",
          "heating_gas_aug",
          "heating_gas_sep",
          "heating_gas_oct",
          "heating_gas_nov",
          "heating_gas_dec"
        ]
      },
      "workflow": [
        {
          "measure_definition_class_name": "ReduceLightingLoadsByPercentage",
          "measure_definition_directory": "./measures/ReduceLightingLoadsByPercentage",
          "measure_definition_display_name": "ReduceLightingLoadsByPercentage",
          "measure_definition_uuid": "ab60510f-c9d0-4124-b84e-15c44a0e2f5b",
          "measure_definition_version_uuid": "707da523-378b-4bf1-8629-18c5b11f3259",
          "measure_type": "RubyMeasure",
          "arguments": [
            {
              "display_name": "Apply the Measure to a Specific Space Type or to the Entire Model.",
              "display_name_short": "Apply the Measure to a Specific Space Type or to the Entire Model.",
              "name": "space_type",
              "value": "*Entire Building*",
              "value_type": "choice"
            },
            {
              "display_name": "Increase in Material and Installation Cost for Lighting per Floor Area (%).",
              "display_name_short": "Increase in Material and Installation Cost for Lighting per Floor Area (%).",
              "name": "material_and_installation_cost",
              "value": 0.0,
              "value_type": "double"
            },
            {
              "display_name": "Increase in Demolition Costs for Lighting per Floor Area (%).",
              "display_name_short": "Increase in Demolition Costs for Lighting per Floor Area (%).",
              "name": "demolition_cost",
              "value": 0.0,
              "value_type": "double"
            },
            {
              "display_name": "Years Until Costs Start (whole years).",
              "display_name_short": "Years Until Costs Start (whole years).",
              "name": "years_until_costs_start",
              "value": 0,
              "value_type": "integer"
            },
            {
              "display_name": "Demolition Costs Occur During Initial Construction?",
              "display_name_short": "Demolition Costs Occur During Initial Construction?",
              "name": "demo_cost_initial_const",
              "value": true,
              "value_type": "bool"
            },
            {
              "display_name": "Expected Life (whole years).",
              "display_name_short": "Expected Life (whole years).",
              "name": "expected_life",
              "value": 15,
              "value_type": "integer"
            },
            {
              "display_name": "Increase O & M Costs for Lighting per Floor Area (%).",
              "display_name_short": "Increase O & M Costs for Lighting per Floor Area (%).",
              "name": "om_cost",
              "value": 0.0,
              "value_type": "double"
            },
            {
              "display_name": "O & M Frequency (whole years).",
              "display_name_short": "O & M Frequency (whole years).",
              "name": "om_frequency",
              "value": 1,
              "value_type": "integer"
            }
          ],
          "display_name": "Reduce Lighting Loads by Percentage",
          "name": "reduce_lighting_loads_by_percentage",
          "variables": [
            {
              "argument": {
                "display_name": "Lighting Power Reduction",
                "display_name_short": "Lighting Power Reduction",
                "name": "lighting_power_reduction_percent",
                "value_type": "double"
              },
              "display_name": "Lighting Power Reduction",
              "display_name_short": "Lighting Power Reduction",
              "maximum": 20.0,
              "minimum": -20.0,
              "relation_to_output": "",
              "static_value": 0.0,
              "uncertainty_description": {
                "attributes": [
                  {
                    "name": "lower_bounds",
                    "value": -20.0
                  },
                  {
                    "name": "upper_bounds",
                    "value": 20.0
                  },
                  {
                    "name": "stddev",
                    "value": 6.666666666666667
                  },
                  {
                    "name": "delta_x",
                    "value": null
                  },
                  {
                    "name": "modes",
                    "value": -1.0
                  }
                ],
                "type": "triangle_uncertain"
              },
              "units": "",
              "value_type": "double",
              "variable": true,
              "variable_type": "RubyContinuousVariable",
              "uuid": "47c0db09-bac3-4d54-be07-ec715bad56d9",
              "version_uuid": "5a5ea325-c885-4e8d-b6dd-25c788396bc3"
            }
          ],
          "workflow_index": 0,
          "workflow_step_type": "Measure",
          "uuid": "e0b74538-cd81-4031-b10e-b376e31189b3",
          "version_uuid": "e46eeae2-04e6-453d-8497-0feb937d1fbd"
        },
        {
          "measure_definition_class_name": "ReduceElectricEquipmentLoadsByPercentage",
          "measure_definition_directory": "./measures/ExampleMeasure",
          "measure_definition_display_name": "ReduceElectricEquipmentLoadsByPercentage",
          "measure_definition_uuid": "aa75e571-0a62-42e0-af4c-35f9129d79f9",
          "measure_definition_version_uuid": "42314d7e-bf63-4c80-b1a3-1325e0ee3c7e",
          "measure_type": "RubyMeasure",
          "arguments": [
            {
              "display_name": "Apply the Measure to a Specific Space Type or to the Entire Model.",
              "display_name_short": "Apply the Measure to a Specific Space Type or to the Entire Model.",
              "name": "space_type",
              "value": "*Entire Building*",
              "value_type": "choice"
            },
            {
              "display_name": "Increase in Material and Installation Cost for Electric Equipment per Floor Area (%).",
              "display_name_short": "Increase in Material and Installation Cost for Electric Equipment per Floor Area (%).",
              "name": "material_and_installation_cost",
              "value": 0.0,
              "value_type": "double"
            },
            {
              "display_name": "Increase in Demolition Costs for Electric Equipment per Floor Area (%).",
              "display_name_short": "Increase in Demolition Costs for Electric Equipment per Floor Area (%).",
              "name": "demolition_cost",
              "value": 0.0,
              "value_type": "double"
            },
            {
              "display_name": "Years Until Costs Start (whole years).",
              "display_name_short": "Years Until Costs Start (whole years).",
              "name": "years_until_costs_start",
              "value": 0,
              "value_type": "integer"
            },
            {
              "display_name": "Demolition Costs Occur During Initial Construction?",
              "display_name_short": "Demolition Costs Occur During Initial Construction?",
              "name": "demo_cost_initial_const",
              "value": false,
              "value_type": "bool"
            },
            {
              "display_name": "Expected Life (whole years).",
              "display_name_short": "Expected Life (whole years).",
              "name": "expected_life",
              "value": 15,
              "value_type": "integer"
            },
            {
              "display_name": "Increase O & M Costs for Electric Equipment per Floor Area (%).",
              "display_name_short": "Increase O & M Costs for Electric Equipment per Floor Area (%).",
              "name": "om_cost",
              "value": 0.0,
              "value_type": "double"
            },
            {
              "display_name": "O & M Frequency (whole years).",
              "display_name_short": "O & M Frequency (whole years).",
              "name": "om_frequency",
              "value": 1,
              "value_type": "integer"
            }
          ],
          "display_name": "Reduce Electric Equipment Loads by Percentage",
          "name": "reduce_electric_equipment_loads_by_percentage",
          "variables": [
            {
              "argument": {
                "display_name": "Electric Equipment Power Reduction (%).",
                "display_name_short": "Electric Equipment Power Reduction (%).",
                "name": "elecequip_power_reduction_percent",
                "value_type": "double"
              },
              "display_name": "Electric Equipment Power Reduction (%).",
              "display_name_short": "Electric Equipment Power Reduction (%).",
              "maximum": 30.0,
              "minimum": -20.0,
              "relation_to_output": "",
              "static_value": 0.0,
              "uncertainty_description": {
                "attributes": [
                  {
                    "name": "lower_bounds",
                    "value": -20.0
                  },
                  {
                    "name": "upper_bounds",
                    "value": 30.0
                  },
                  {
                    "name": "stddev",
                    "value": 8.333333333333334
                  },
                  {
                    "name": "delta_x",
                    "value": null
                  },
                  {
                    "name": "modes",
                    "value": 0.0
                  }
                ],
                "type": "triangle_uncertain"
              },
              "units": "",
              "value_type": "double",
              "variable": true,
              "variable_type": "RubyContinuousVariable",
              "uuid": "1d3d4d20-9d34-45b9-9635-eab209d56147",
              "version_uuid": "ab377446-2eb1-4a8b-839b-bc8ea2c7f0dd"
            }
          ],
          "workflow_index": 1,
          "workflow_step_type": "Measure",
          "uuid": "8e90df02-20b0-476c-a866-1432771ded4f",
          "version_uuid": "2c3f11c6-681f-42a4-aa15-73fe6add5ce6"
        },
        {
          "measure_definition_class_name": "ReduceSpaceInfiltrationByPercentage",
          "measure_definition_directory": "./measures/ExampleMeasure",
          "measure_definition_display_name": "ReduceSpaceInfiltrationByPercentage",
          "measure_definition_uuid": "d7aaf25c-421d-415b-926d-7a19f8620e7e",
          "measure_definition_version_uuid": "4ded412a-41dd-4095-93f4-d47bbcebc15c",
          "measure_type": "RubyMeasure",
          "arguments": [
            {
              "display_name": "Apply the Measure to a Specific Space Type or to the Entire Model.",
              "display_name_short": "Apply the Measure to a Specific Space Type or to the Entire Model.",
              "name": "space_type",
              "value": "*Entire Building*",
              "value_type": "choice"
            },
            {
              "display_name": "Increase in Material and Installation Costs for Building per Affected Floor Area ($/ft^2).",
              "display_name_short": "Increase in Material and Installation Costs for Building per Affected Floor Area ($/ft^2).",
              "name": "material_and_installation_cost",
              "value": 0.0,
              "value_type": "double"
            },
            {
              "display_name": "O & M Costs for Construction per Affected Floor Area ($/ft^2).",
              "display_name_short": "O & M Costs for Construction per Affected Floor Area ($/ft^2).",
              "name": "om_cost",
              "value": 0.0,
              "value_type": "double"
            },
            {
              "display_name": "O & M Frequency (whole years).",
              "display_name_short": "O & M Frequency (whole years).",
              "name": "om_frequency",
              "value": 1,
              "value_type": "integer"
            }
          ],
          "display_name": "ReduceSpaceInfiltrationByPercentage",
          "name": "reducespaceinfiltrationbypercentage",
          "variables": [
            {
              "argument": {
                "display_name": "Space Infiltration Power Reduction",
                "display_name_short": "Space Infiltration Power Reduction",
                "name": "space_infiltration_reduction_percent",
                "value_type": "double"
              },
              "display_name": "Space Infiltration Power Reduction",
              "display_name_short": "Space Infiltration Power Reduction",
              "maximum": 1.0,
              "minimum": -100.0,
              "relation_to_output": "",
              "static_value": 0.0,
              "uncertainty_description": {
                "attributes": [
                  {
                    "name": "lower_bounds",
                    "value": -100.0
                  },
                  {
                    "name": "upper_bounds",
                    "value": 1.0
                  },
                  {
                    "name": "stddev",
                    "value": 16.833333333333332
                  },
                  {
                    "name": "delta_x",
                    "value": null
                  },
                  {
                    "name": "modes",
                    "value": -50.0
                  }
                ],
                "type": "uniform_uncertain"
              },
              "units": "",
              "value_type": "double",
              "variable": true,
              "variable_type": "RubyContinuousVariable",
              "uuid": "04f46b0f-3942-444b-8e8d-8abcae2e9409",
              "version_uuid": "287b727b-ff50-4e77-a66f-844c87588234"
            }
          ],
          "workflow_index": 2,
          "workflow_step_type": "Measure",
          "uuid": "23f7e5a8-08c9-44ea-8e62-5096722bb03a",
          "version_uuid": "43a90a2f-ca9d-4d15-bf2c-069c02116385"
        },
        {
          "measure_definition_class_name": "AdjustTheromstatSetpointsByDegrees",
          "measure_definition_directory": "./measures/ExampleMeasure",
          "measure_definition_display_name": "AdjustTheromstatSetpointsByDegrees",
          "measure_definition_uuid": "4ed9e9df-982f-4e5d-8774-072963c4278c",
          "measure_definition_version_uuid": "1afe216a-3ac7-4632-8e63-362c3e50b428",
          "measure_type": "RubyMeasure",
          "arguments": [
            {
              "display_name": "Alter Design Day Thermostats?",
              "display_name_short": "Alter Design Day Thermostats?",
              "name": "alter_design_days",
              "value": false,
              "value_type": "bool"
            }
          ],
          "display_name": "Adjust Thermostat Setpoints by Degrees",
          "name": "adjust_thermostat_setpoints_by_degrees",
          "variables": [
            {
              "argument": {
                "display_name": "Degrees Fahrenheit to Adjust Cooling Setpoint By.",
                "display_name_short": "Degrees Fahrenheit to Adjust Cooling Setpoint By.",
                "name": "cooling_adjustment",
                "value_type": "double"
              },
              "display_name": "Degrees Fahrenheit to Adjust Cooling Setpoint By.",
              "display_name_short": "Degrees Fahrenheit to Adjust Cooling Setpoint By.",
              "maximum": 2.0,
              "minimum": -2.0,
              "relation_to_output": "",
              "static_value": 1.0,
              "uncertainty_description": {
                "attributes": [
                  {
                    "name": "lower_bounds",
                    "value": -2.0
                  },
                  {
                    "name": "upper_bounds",
                    "value": 2.0
                  },
                  {
                    "name": "stddev",
                    "value": 0.6666666666666666
                  },
                  {
                    "name": "delta_x",
                    "value": null
                  },
                  {
                    "name": "modes",
                    "value": 0.0
                  }
                ],
                "type": "uniform_uncertain"
              },
              "units": "",
              "value_type": "double",
              "variable": true,
              "variable_type": "RubyContinuousVariable",
              "uuid": "80338d77-1acd-4d8f-8adf-7c415e74d42b",
              "version_uuid": "7d196d43-b7fe-4d1f-95c4-fef2c2fa56ec"
            },
            {
              "argument": {
                "display_name": "Degrees Fahrenheit to Adjust heating Setpoint By.",
                "display_name_short": "Degrees Fahrenheit to Adjust heating Setpoint By.",
                "name": "heating_adjustment",
                "value_type": "double"
              },
              "display_name": "Degrees Fahrenheit to Adjust heating Setpoint By.",
              "display_name_short": "Degrees Fahrenheit to Adjust heating Setpoint By.",
              "maximum": 2.0,
              "minimum": -2.0,
              "relation_to_output": "",
              "static_value": -1.0,
              "uncertainty_description": {
                "attributes": [
                  {
                    "name": "lower_bounds",
                    "value": -2.0
                  },
                  {
                    "name": "upper_bounds",
                    "value": 2.0
                  },
                  {
                    "name": "stddev",
                    "value": 0.6666666666666666
                  },
                  {
                    "name": "delta_x",
                    "value": null
                  },
                  {
                    "name": "modes",
                    "value": 0.0
                  }
                ],
                "type": "uniform_uncertain"
              },
              "units": "",
              "value_type": "double",
              "variable": true,
              "variable_type": "RubyContinuousVariable",
              "uuid": "7f1b8098-2d48-49f5-b376-f2c39b14bd2a",
              "version_uuid": "abd298a7-4516-4522-97df-6f8913380e45"
            }
          ],
          "workflow_index": 3,
          "workflow_step_type": "Measure",
          "uuid": "634c9690-c2ea-48ce-aba3-c21b39c2379c",
          "version_uuid": "443aef3e-7613-455e-a21c-556854aedf13"
        },
        {
          "measure_definition_class_name": "ReduceVentilationByPercentage",
          "measure_definition_directory": "./measures/ExampleMeasure",
          "measure_definition_display_name": "ReduceVentilationByPercentage",
          "measure_definition_uuid": "9fa254c9-62e0-4855-b42f-bf6a9899dc5e",
          "measure_definition_version_uuid": "c54ff98b-26e1-4bdb-a670-9d0eed18f3f4",
          "measure_type": "RubyMeasure",
          "arguments": [
            {
              "display_name": "Apply the Measure to a Specific Space Type or to the Entire Model.",
              "display_name_short": "Apply the Measure to a Specific Space Type or to the Entire Model.",
              "name": "space_type",
              "value": "*Entire Building*",
              "value_type": "choice"
            }
          ],
          "display_name": "Reduce Ventilation By Percentage",
          "name": "reduce_ventilation_by_percentage",
          "variables": [
            {
              "argument": {
                "display_name": "Design Specification Outdoor Air Reduction (%).",
                "display_name_short": "Design Specification Outdoor Air Reduction (%).",
                "name": "design_spec_outdoor_air_reduction_percent",
                "value_type": "double"
              },
              "display_name": "Design Specification Outdoor Air Reduction (%).",
              "display_name_short": "Design Specification Outdoor Air Reduction (%).",
              "maximum": 90.0,
              "minimum": -90.0,
              "relation_to_output": "",
              "static_value": 0.0,
              "uncertainty_description": {
                "attributes": [
                  {
                    "name": "lower_bounds",
                    "value": -90.0
                  },
                  {
                    "name": "upper_bounds",
                    "value": 90.0
                  },
                  {
                    "name": "stddev",
                    "value": 30.0
                  },
                  {
                    "name": "delta_x",
                    "value": null
                  },
                  {
                    "name": "modes",
                    "value": -1.0
                  }
                ],
                "type": "triangle_uncertain"
              },
              "units": "",
              "value_type": "double",
              "variable": true,
              "variable_type": "RubyContinuousVariable",
              "uuid": "b533ca15-bb75-4314-873d-8fa1b886730a",
              "version_uuid": "3810ee66-d8c0-4a0a-bc65-5e3366b06a1d"
            }
          ],
          "workflow_index": 4,
          "workflow_step_type": "Measure",
          "uuid": "9c5e2293-ddd2-466a-af56-9b1e9f5fb1fb",
          "version_uuid": "0b911db4-31f7-4693-a901-b9b7e387b3b5"
        },
        {
          "measure_definition_class_name": "EnableEconomizerControl",
          "measure_definition_directory": "./measures/ExampleMeasure",
          "measure_definition_display_name": "EnableEconomizerControl",
          "measure_definition_uuid": "872d548f-df88-477f-a17c-ca13f297a82f",
          "measure_definition_version_uuid": "f2349012-d1d7-40b5-9a7f-28ff9fbf659c",
          "measure_type": "RubyMeasure",
          "arguments": [
            {
              "display_name": "Choose an Air Loop to Alter.",
              "display_name_short": "Choose an Air Loop to Alter.",
              "name": "object",
              "value": "*All Air Loops*",
              "value_type": "choice"
            },
            {
              "display_name": "Economizer Control Type.",
              "display_name_short": "Economizer Control Type.",
              "name": "economizer_type",
              "value": "FixedDryBulb",
              "value_type": "choice"
            },
            {
              "display_name": "Economizer Maximum Enthalpy (Btu/lb).",
              "display_name_short": "Economizer Maximum Enthalpy (Btu/lb).",
              "name": "econoMaxEnthalpy",
              "value": 28.0,
              "value_type": "double"
            },
            {
              "display_name": "Economizer Maximum Limit Dewpoint Temperature (F).",
              "display_name_short": "Economizer Maximum Limit Dewpoint Temperature (F).",
              "name": "econoMaxDewpointTemp",
              "value": 55.0,
              "value_type": "double"
            },
            {
              "display_name": "Economizer Minimum Limit Dry-Bulb Temperature (F).",
              "display_name_short": "Economizer Minimum Limit Dry-Bulb Temperature (F).",
              "name": "econoMinDryBulbTemp",
              "value": -148.0,
              "value_type": "double"
            },
            {
              "display_name": "Remove Baseline Costs From Effected AirLoopHVACOutdoorAirSystems?",
              "display_name_short": "Remove Baseline Costs From Effected AirLoopHVACOutdoorAirSystems?",
              "name": "remove_costs",
              "value": false,
              "value_type": "bool"
            },
            {
              "display_name": "Material and Installation Costs per Air Loop to Enable Economizer ($).",
              "display_name_short": "Material and Installation Costs per Air Loop to Enable Economizer ($).",
              "name": "material_cost",
              "value": 0.0,
              "value_type": "double"
            },
            {
              "display_name": "Demolition Costs per Air Loop to Enable Economizer ($).",
              "display_name_short": "Demolition Costs per Air Loop to Enable Economizer ($).",
              "name": "demolition_cost",
              "value": 0.0,
              "value_type": "double"
            },
            {
              "display_name": "Years Until Costs Start (whole years).",
              "display_name_short": "Years Until Costs Start (whole years).",
              "name": "years_until_costs_start",
              "value": 0,
              "value_type": "integer"
            },
            {
              "display_name": "Demolition Costs Occur During Initial Construction?",
              "display_name_short": "Demolition Costs Occur During Initial Construction?",
              "name": "demo_cost_initial_const",
              "value": false,
              "value_type": "bool"
            },
            {
              "display_name": "Expected Life (whole years).",
              "display_name_short": "Expected Life (whole years).",
              "name": "expected_life",
              "value": 20,
              "value_type": "integer"
            },
            {
              "display_name": "O & M Costs per Air Loop for Economizer  ($).",
              "display_name_short": "O & M Costs per Air Loop for Economizer  ($).",
              "name": "om_cost",
              "value": 0.0,
              "value_type": "double"
            },
            {
              "display_name": "O & M Frequency (whole years).",
              "display_name_short": "O & M Frequency (whole years).",
              "name": "om_frequency",
              "value": 1,
              "value_type": "integer"
            }
          ],
          "display_name": "Enable Economizer Control",
          "name": "enable_economizer_control",
          "variables": [
            {
              "argument": {
                "display_name": "Economizer Maximum Limit Dry-Bulb Temperature (F).",
                "display_name_short": "Economizer Maximum Limit Dry-Bulb Temperature (F).",
                "name": "econoMaxDryBulbTemp",
                "value_type": "double"
              },
              "display_name": "Economizer Maximum Limit Dry-Bulb Temperature (F).",
              "display_name_short": "Economizer Maximum Limit Dry-Bulb Temperature (F).",
              "maximum": 80.0,
              "minimum": 76.0,
              "relation_to_output": "",
              "static_value": 79.0,
              "uncertainty_description": {
                "attributes": [
                  {
                    "name": "lower_bounds",
                    "value": 76.0
                  },
                  {
                    "name": "upper_bounds",
                    "value": 80.0
                  },
                  {
                    "name": "stddev",
                    "value": 0.6666666666666666
                  },
                  {
                    "name": "delta_x",
                    "value": null
                  },
                  {
                    "name": "modes",
                    "value": 78.0
                  }
                ],
                "type": "triangle_uncertain"
              },
              "units": "",
              "value_type": "double",
              "variable": true,
              "variable_type": "RubyContinuousVariable",
              "uuid": "946b33f6-26a3-49e4-90ef-f662e9bd0f4c",
              "version_uuid": "60888f1f-3439-4293-9e69-5cec5379f8c4"
            }
          ],
          "workflow_index": 5,
          "workflow_step_type": "Measure",
          "uuid": "0557023f-e126-40c8-b7c8-80082653b748",
          "version_uuid": "8826054d-a5d0-4632-b84b-bb17af7b4e26"
        },
        {
          "measure_definition_class_name": "SetBoilerThermalEfficiency",
          "measure_definition_directory": "./measures/ExampleMeasure",
          "measure_definition_display_name": "SetBoilerThermalEfficiency",
          "measure_definition_uuid": "250e6a8a-5a70-47ad-83fb-135f6daf57cb",
          "measure_definition_version_uuid": "08e062fd-85a2-47de-87de-46de551e3a7a",
          "measure_type": "RubyMeasure",
          "arguments": [
            {
              "display_name": "Apply the measure to",
              "display_name_short": "Apply the measure to",
              "name": "boiler_widget",
              "value": "*All boilers*",
              "value_type": "choice"
            },
            {
              "display_name": "Option 1, set boiler nominal thermal efficiency to a user defined value",
              "display_name_short": "Option 1, set boiler nominal thermal efficiency to a user defined value",
              "name": "input_option_manual",
              "value": true,
              "value_type": "bool"
            },
            {
              "display_name": "Option 2, set boiler nominal thermal efficiency based on ASHRAE Standard 90.1 requirement",
              "display_name_short": "Option 2, set boiler nominal thermal efficiency based on ASHRAE Standard 90.1 requirement",
              "name": "input_option_standard",
              "value": false,
              "value_type": "bool"
            },
            {
              "display_name": "Boiler nominal capacity [W]",
              "display_name_short": "Boiler nominal capacity [W]",
              "name": "nominal_capacity",
              "value": 0.0,
              "value_type": "double"
            },
            {
              "display_name": "Fuel type",
              "display_name_short": "Fuel type",
              "name": "fuel_type_widget",
              "value": "0.0",
              "value_type": "choice"
            },
            {
              "display_name": "ASHRAE Standards 90.1",
              "display_name_short": "ASHRAE Standards 90.1",
              "name": "standards_widget",
              "value": "0.0",
              "value_type": "choice"
            }
          ],
          "display_name": "Set Boiler Thermal Efficiency",
          "name": "set_boiler_thermal_efficiency",
          "variables": [
            {
              "argument": {
                "display_name": "Boiler nominal thermal efficiency (between 0 and 1)",
                "display_name_short": "Boiler nominal thermal efficiency (between 0 and 1)",
                "name": "boiler_thermal_efficiency",
                "value_type": "double"
              },
              "display_name": "Boiler nominal thermal efficiency (between 0 and 1)",
              "display_name_short": "Boiler nominal thermal efficiency (between 0 and 1)",
              "maximum": 0.9,
              "minimum": 0.5,
              "relation_to_output": "",
              "static_value": 0.8,
              "uncertainty_description": {
                "attributes": [
                  {
                    "name": "lower_bounds",
                    "value": 0.5
                  },
                  {
                    "name": "upper_bounds",
                    "value": 0.9
                  },
                  {
                    "name": "stddev",
                    "value": 0.06666666666666667
                  },
                  {
                    "name": "delta_x",
                    "value": null
                  },
                  {
                    "name": "modes",
                    "value": 0.75
                  }
                ],
                "type": "triangle_uncertain"
              },
              "units": "",
              "value_type": "double",
              "variable": true,
              "variable_type": "RubyContinuousVariable",
              "uuid": "e535b791-62db-449c-a6c5-c21cd6a42c7d",
              "version_uuid": "8be794aa-4583-4585-bbea-035fc1d643ea"
            }
          ],
          "workflow_index": 6,
          "workflow_step_type": "Measure",
          "uuid": "053383a9-d30f-454c-8f51-162aed135097",
          "version_uuid": "ec254701-0ca6-488f-8be4-ef900aaf1515"
        },
        {
          "measure_definition_class_name": "IncreaseInsulationRValueForExteriorWalls",
          "measure_definition_directory": "./measures/ExampleMeasure",
          "measure_definition_display_name": "IncreaseInsulationRValueForExteriorWalls",
          "measure_definition_uuid": "6895b68f-f1c6-4556-83a3-ad3a9ea6e6b9",
          "measure_definition_version_uuid": "e1b06b34-230a-4e32-a519-1e9f731bbde5",
          "measure_type": "RubyMeasure",
          "arguments": [
            {
              "display_name": "Allow both increase and decrease in R-value to reach requested target?",
              "display_name_short": "Allow both increase and decrease in R-value to reach requested target?",
              "name": "allow_reduction",
              "value": true,
              "value_type": "bool"
            },
            {
              "display_name": "Increase in Material and Installation Costs for Construction per Area Used ($/ft^2).",
              "display_name_short": "Increase in Material and Installation Costs for Construction per Area Used ($/ft^2).",
              "name": "material_cost_increase_ip",
              "value": 0.0,
              "value_type": "double"
            },
            {
              "display_name": "One Time Retrofit Cost to Add Insulation to Construction ($/ft^2).",
              "display_name_short": "One Time Retrofit Cost to Add Insulation to Construction ($/ft^2).",
              "name": "one_time_retrofit_cost_ip",
              "value": 0.0,
              "value_type": "double"
            },
            {
              "display_name": "Year to Incur One Time Retrofit Cost (whole years).",
              "display_name_short": "Year to Incur One Time Retrofit Cost (whole years).",
              "name": "years_until_retrofit_cost",
              "value": 0,
              "value_type": "integer"
            }
          ],
          "display_name": "Set R-value of Insulation for Exterior Walls to a Specific Value",
          "name": "set_r_value_of_insulation_for_exterior_walls_to_a_specific_value",
          "variables": [
            {
              "argument": {
                "display_name": "Insulation R-value (ft^2*h*R/Btu).",
                "display_name_short": "Insulation R-value (ft^2*h*R/Btu).",
                "name": "r_value",
                "value_type": "double"
              },
              "display_name": "Insulation R-value (ft^2*h*R/Btu).",
              "display_name_short": "Insulation R-value (ft^2*h*R/Btu).",
              "maximum": 5.0,
              "minimum": 1.0,
              "relation_to_output": "",
              "static_value": 5.0,
              "uncertainty_description": {
                "attributes": [
                  {
                    "name": "lower_bounds",
                    "value": 1.0
                  },
                  {
                    "name": "upper_bounds",
                    "value": 5.0
                  },
                  {
                    "name": "stddev",
                    "value": 0.6666666666666666
                  },
                  {
                    "name": "delta_x",
                    "value": null
                  },
                  {
                    "name": "modes",
                    "value": 2.5
                  }
                ],
                "type": "triangle_uncertain"
              },
              "units": "",
              "value_type": "double",
              "variable": true,
              "variable_type": "RubyContinuousVariable",
              "uuid": "cb4843de-4ce8-478b-9443-e39898a222a7",
              "version_uuid": "64ccb543-ffdd-4830-9dbd-3ddf848099c3"
            }
          ],
          "workflow_index": 7,
          "workflow_step_type": "Measure",
          "uuid": "e2906a1a-4ad0-48b8-9d17-f9d384874faa",
          "version_uuid": "33bad8fa-325b-42d5-a7c2-332c1b849b2e"
        },
        {
          "measure_definition_class_name": "SetChillerCOP",
          "measure_definition_directory": "./measures/ExampleMeasure",
          "measure_definition_display_name": "SetChillerCOP",
          "measure_definition_uuid": "364f8612-1ceb-4044-b551-23c45dac65fb",
          "measure_definition_version_uuid": "a60db6e0-4c36-4760-9331-b0523282ee6b",
          "measure_type": "RubyMeasure",
          "arguments": [
            {
              "display_name": "Apply the measure to",
              "display_name_short": "Apply the measure to",
              "name": "chiller_widget",
              "value": "*All chillers*",
              "value_type": "choice"
            }
          ],
          "display_name": "SetChillerCOP",
          "name": "setchillercop",
          "variables": [
            {
              "argument": {
                "display_name": "Chiller Rated COP (more than 0)",
                "display_name_short": "Chiller Rated COP (more than 0)",
                "name": "chiller_thermal_efficiency",
                "value_type": "double"
              },
              "display_name": "Chiller Rated COP (more than 0)",
              "display_name_short": "Chiller Rated COP (more than 0)",
              "maximum": 5.5,
              "minimum": 2.5,
              "relation_to_output": "",
              "static_value": 3.0,
              "uncertainty_description": {
                "attributes": [
                  {
                    "name": "lower_bounds",
                    "value": 2.5
                  },
                  {
                    "name": "upper_bounds",
                    "value": 5.5
                  },
                  {
                    "name": "stddev",
                    "value": 0.5
                  },
                  {
                    "name": "delta_x",
                    "value": null
                  },
                  {
                    "name": "modes",
                    "value": 3.5
                  }
                ],
                "type": "triangle_uncertain"
              },
              "units": "",
              "value_type": "double",
              "variable": true,
              "variable_type": "RubyContinuousVariable",
              "uuid": "1763c578-472a-4b70-a79d-a662d4e4ee84",
              "version_uuid": "47333c47-cb3c-42c2-bacd-5d4fa8b7e2a1"
            }
          ],
          "workflow_index": 8,
          "workflow_step_type": "Measure",
          "uuid": "27274a43-810d-4d1e-9904-244f9986e377",
          "version_uuid": "a0462965-a34c-4102-b715-fdd41de19045"
        },
        {
          "measure_definition_class_name": "SetHeatingandCoolingSizingFactors",
          "measure_definition_directory": "./measures/ExampleMeasure",
          "measure_definition_display_name": "SetHeatingandCoolingSizingFactors",
          "measure_definition_uuid": "6971542c-9058-4b3d-a8d4-603e461453fb",
          "measure_definition_version_uuid": "1e2bc499-a208-4f3b-a613-9c6e7ddd819f",
          "measure_type": "RubyMeasure",
          "arguments": [

          ],
          "display_name": "Set Heating and Cooling Sizing Factors",
          "name": "set_heating_and_cooling_sizing_factors",
          "variables": [
            {
              "argument": {
                "display_name": "Heating Sizing Factor (eg 1.25 = 125% of required heating capacity.",
                "display_name_short": "Heating Sizing Factor (eg 1.25 = 125% of required heating capacity.",
                "name": "htg_sz_factor",
                "value_type": "double"
              },
              "display_name": "Heating Sizing Factor (eg 1.25 = 125% of required heating capacity.",
              "display_name_short": "Heating Sizing Factor (eg 1.25 = 125% of required heating capacity.",
              "maximum": 1.5,
              "minimum": 1.0,
              "relation_to_output": "",
              "static_value": 1.25,
              "uncertainty_description": {
                "attributes": [
                  {
                    "name": "lower_bounds",
                    "value": 1.0
                  },
                  {
                    "name": "upper_bounds",
                    "value": 1.5
                  },
                  {
                    "name": "stddev",
                    "value": 0.08333333333333333
                  },
                  {
                    "name": "delta_x",
                    "value": null
                  },
                  {
                    "name": "modes",
                    "value": 1.25
                  }
                ],
                "type": "triangle_uncertain"
              },
              "units": "",
              "value_type": "double",
              "variable": true,
              "variable_type": "RubyContinuousVariable",
              "uuid": "b7017071-21a8-45b1-8e48-047cf2686cc4",
              "version_uuid": "4a5ea25b-500f-47fc-8ae4-842b6d4eedd1"
            },
            {
              "argument": {
                "display_name": "Coolinig Sizing Factor (eg 1.15 = 115% of required cooling capacity.",
                "display_name_short": "Coolinig Sizing Factor (eg 1.15 = 115% of required cooling capacity.",
                "name": "clg_sz_factor",
                "value_type": "double"
              },
              "display_name": "Coolinig Sizing Factor (eg 1.15 = 115% of required cooling capacity.",
              "display_name_short": "Coolinig Sizing Factor (eg 1.15 = 115% of required cooling capacity.",
              "maximum": 1.5,
              "minimum": 1.0,
              "relation_to_output": "",
              "static_value": 1.15,
              "uncertainty_description": {
                "attributes": [
                  {
                    "name": "lower_bounds",
                    "value": 1.0
                  },
                  {
                    "name": "upper_bounds",
                    "value": 1.5
                  },
                  {
                    "name": "stddev",
                    "value": 0.08333333333333333
                  },
                  {
                    "name": "delta_x",
                    "value": null
                  },
                  {
                    "name": "modes",
                    "value": 1.15
                  }
                ],
                "type": "triangle_uncertain"
              },
              "units": "",
              "value_type": "double",
              "variable": true,
              "variable_type": "RubyContinuousVariable",
              "uuid": "45bec22a-c6ce-4014-b7e2-1ecd9586f822",
              "version_uuid": "201d9428-ac93-400d-8577-df9a5b10ed54"
            }
          ],
          "workflow_index": 9,
          "workflow_step_type": "Measure",
          "uuid": "d9a0419f-4101-491f-ba2a-6ae419c7aa84",
          "version_uuid": "7852a8bc-0030-44fc-a2bd-ab94dcec7af9"
        },
        {
          "measure_definition_class_name": "SetChilledWaterLoopTemperature",
          "measure_definition_directory": "./measures/ExampleMeasure",
          "measure_definition_display_name": "SetChilledWaterLoopTemperature",
          "measure_definition_uuid": "b77c39dc-9be3-4965-a298-ecf94a3fdece",
          "measure_definition_version_uuid": "5d91bfe9-8205-4a33-b352-a2c70e230d96",
          "measure_type": "RubyMeasure",
          "arguments": [

          ],
          "display_name": "Set Chilled Water Loop Temperature",
          "name": "set_chilled_water_loop_temperature",
          "variables": [
            {
              "argument": {
                "display_name": "Desired chilled water setpoint (F)",
                "display_name_short": "Desired chilled water setpoint (F)",
                "name": "cw_temp_f",
                "value_type": "double"
              },
              "display_name": "Desired chilled water setpoint (F)",
              "display_name_short": "Desired chilled water setpoint (F)",
              "maximum": 46.0,
              "minimum": 42.0,
              "relation_to_output": "",
              "static_value": 44.0,
              "uncertainty_description": {
                "attributes": [
                  {
                    "name": "lower_bounds",
                    "value": 42.0
                  },
                  {
                    "name": "upper_bounds",
                    "value": 46.0
                  },
                  {
                    "name": "stddev",
                    "value": 0.6666666666666666
                  },
                  {
                    "name": "delta_x",
                    "value": null
                  },
                  {
                    "name": "modes",
                    "value": 44.0
                  }
                ],
                "type": "triangle_uncertain"
              },
              "units": "",
              "value_type": "double",
              "variable": true,
              "variable_type": "RubyContinuousVariable",
              "uuid": "78b7527c-911e-4e0b-b8b7-214ccd1bf519",
              "version_uuid": "02d43f74-f27b-4cd0-8a7f-e9a0f46d1873"
            }
          ],
          "workflow_index": 10,
          "workflow_step_type": "Measure",
          "uuid": "349aad0f-617a-4fe6-aeff-3b86be69e9b6",
          "version_uuid": "f3a30b8d-3e7f-4cd8-9010-5d718c189f68"
        },
        {
          "measure_definition_class_name": "SetHotWaterLoopTemperature",
          "measure_definition_directory": "./measures/ExampleMeasure",
          "measure_definition_display_name": "SetHotWaterLoopTemperature",
          "measure_definition_uuid": "03fe5c24-0a67-4833-a8ef-5e3243403fa4",
          "measure_definition_version_uuid": "c687cdcf-dbc9-4977-8c29-d905e58b1c77",
          "measure_type": "RubyMeasure",
          "arguments": [

          ],
          "display_name": "Set Hot Water Loop Temperature",
          "name": "set_hot_water_loop_temperature",
          "variables": [
            {
              "argument": {
                "display_name": "Desired hot water setpoint (F)",
                "display_name_short": "Desired hot water setpoint (F)",
                "name": "hw_temp_f",
                "value_type": "double"
              },
              "display_name": "Desired hot water setpoint (F)",
              "display_name_short": "Desired hot water setpoint (F)",
              "maximum": 122.0,
              "minimum": 118.0,
              "relation_to_output": "",
              "static_value": 120.0,
              "uncertainty_description": {
                "attributes": [
                  {
                    "name": "lower_bounds",
                    "value": 118.0
                  },
                  {
                    "name": "upper_bounds",
                    "value": 122.0
                  },
                  {
                    "name": "stddev",
                    "value": 0.6666666666666666
                  },
                  {
                    "name": "delta_x",
                    "value": null
                  },
                  {
                    "name": "modes",
                    "value": 120.0
                  }
                ],
                "type": "triangle_uncertain"
              },
              "units": "",
              "value_type": "double",
              "variable": true,
              "variable_type": "RubyContinuousVariable",
              "uuid": "b8f9b24b-a5a8-497b-af87-9f8295f3251b",
              "version_uuid": "1c137ecc-dfaa-4e70-b077-a13ee83078c4"
            }
          ],
          "workflow_index": 11,
          "workflow_step_type": "Measure",
          "uuid": "8c68fa76-8532-4e2f-b9b6-4417435c8b31",
          "version_uuid": "69501eb8-8389-436f-83c2-42d368989d83"
        },
        {
          "measure_definition_class_name": "SetMinimumVAVTerminalFlowFraction",
          "measure_definition_directory": "./measures/ExampleMeasure",
          "measure_definition_display_name": "SetMinimumVAVTerminalFlowFraction",
          "measure_definition_uuid": "a0a0cc3d-8b07-4932-bf92-c61e123b492e",
          "measure_definition_version_uuid": "c157a41f-adfa-4399-85b1-5369885dfed5",
          "measure_type": "RubyMeasure",
          "arguments": [

          ],
          "display_name": "Set Minimum VAV Terminal Flow Fraction",
          "name": "set_minimum_vav_terminal_flow_fraction",
          "variables": [
            {
              "argument": {
                "display_name": "Minimum VAV Terminal Flow Fraction (%)",
                "display_name_short": "Minimum VAV Terminal Flow Fraction (%)",
                "name": "min_vav_frac",
                "value_type": "double"
              },
              "display_name": "Minimum VAV Terminal Flow Fraction (%)",
              "display_name_short": "Minimum VAV Terminal Flow Fraction (%)",
              "maximum": 60.0,
              "minimum": 0.0,
              "relation_to_output": "",
              "static_value": 30.0,
              "uncertainty_description": {
                "attributes": [
                  {
                    "name": "lower_bounds",
                    "value": 0.0
                  },
                  {
                    "name": "upper_bounds",
                    "value": 60.0
                  },
                  {
                    "name": "stddev",
                    "value": 10.0
                  },
                  {
                    "name": "delta_x",
                    "value": null
                  },
                  {
                    "name": "modes",
                    "value": 30.0
                  }
                ],
                "type": "triangle_uncertain"
              },
              "units": "",
              "value_type": "double",
              "variable": true,
              "variable_type": "RubyContinuousVariable",
              "uuid": "52ab48e7-5842-4c1b-a244-2460e0db4864",
              "version_uuid": "72ae3321-705d-4aa5-a216-359701c946d4"
            }
          ],
          "workflow_index": 12,
          "workflow_step_type": "Measure",
          "uuid": "7b58ca46-15dd-4ae0-9041-a3870882b549",
          "version_uuid": "5be1f757-3366-4a24-8fbe-82a8a9905083"
        },
        {
          "measure_definition_class_name": "ModifyEnergyPlusFanVariableVolumeObjects",
          "measure_definition_directory": "./measures/ExampleMeasure",
          "measure_definition_display_name": "ModifyEnergyPlusFanVariableVolumeObjects",
          "measure_definition_uuid": "e05831ec-74f9-4375-a877-42c30078c691",
          "measure_definition_version_uuid": "d8b0545a-8897-4a72-b0d9-20c17eddf221",
          "measure_type": "EnergyPlusMeasure",
          "arguments": [

          ],
          "display_name": "Modify EnergyPlus Fan Varaible Volume Objects",
          "name": "modify_energyplus_fan_varaible_volume_objects",
          "variables": [
            {
              "argument": {
                "display_name": "Pressure Rise (Pa).",
                "display_name_short": "Pressure Rise (Pa).",
                "name": "pressureRise",
                "value_type": "double"
              },
              "display_name": "Pressure Rise (Pa).",
              "display_name_short": "Pressure Rise (Pa).",
              "maximum": 700.0,
              "minimum": 400.0,
              "relation_to_output": "",
              "static_value": 500.0,
              "uncertainty_description": {
                "attributes": [
                  {
                    "name": "lower_bounds",
                    "value": 400.0
                  },
                  {
                    "name": "upper_bounds",
                    "value": 700.0
                  },
                  {
                    "name": "stddev",
                    "value": 50.0
                  },
                  {
                    "name": "delta_x",
                    "value": 5.0
                  },
                  {
                    "name": "modes",
                    "value": 500.0
                  }
                ],
                "type": "triangle_uncertain"
              },
              "units": "",
              "value_type": "double",
              "variable": true,
              "variable_type": "RubyContinuousVariable",
              "uuid": "af8c9a1c-e546-4b04-9d21-731d98024aaf",
              "version_uuid": "51d49a7e-7fc5-40f3-b1ae-bfeacf0c3860"
            }
          ],
          "workflow_index": 13,
          "workflow_step_type": "Measure",
          "uuid": "f0aa95ff-973b-44b8-8ed6-fdd588961168",
          "version_uuid": "21905d82-58cf-4fdc-a058-2cf1b3fe41e8"
        }
      ],
      "analysis_type": "rgenoud"
    },
    "seed": {
      "file_type": "OSM",
      "path": "./seed/small_seed.osm"
    },
    "weather_file": {
      "file_type": "EPW",
      "path": "./weather/partial_weather.epw"
    }
  }
}